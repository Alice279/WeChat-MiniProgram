{"version":3,"sources":["../src/useChainNetId.js"],"names":["UPDATE_CHAINID_SWR_ID","UPDATE_NETWORKID_SWR_ID","useChainNetId","chainId","setChainId","window","conflux","networkId","setNetworkId","parseInt","networkVersion","chainListener","networkListener","on","off"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEO,MAAMA,qBAAqB,GAAG,uBAA9B;;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;;;AAEQ,SAASC,aAAT,GAAyB;AAAA;;AACtC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,gCAASC,MAAT,+DAAS,QAAQC,OAAjB,oDAAS,gBAAiBH,OAA1B,CAA9B;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4B,qBAASC,QAAQ,aAACJ,MAAD,iEAAC,SAAQC,OAAT,qDAAC,iBAAiBI,cAAlB,EAAkC,EAAlC,CAAR,IAAiD,IAA1D,CAAlC;AAEA,+BAAc,MAAM;AAAA;;AAClB,UAAMC,aAAa,GAAIR,OAAD,IAAa;AACjCC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAFD;;AAGA,UAAMS,eAAe,GAAIL,SAAD,IAAe;AACrCC,MAAAA,YAAY,CAACC,QAAQ,CAACF,SAAD,EAAY,EAAZ,CAAR,IAA2B,IAA5B,CAAZ;AACD,KAFD;;AAGA,gBAAAF,MAAM,UAAN,gEAAQC,OAAR,sEAAiBO,EAAjB,CAAoB,gBAApB,EAAsCF,aAAtC;AACA,gBAAAN,MAAM,UAAN,gEAAQC,OAAR,sEAAiBO,EAAjB,CAAoB,gBAApB,EAAsCD,eAAtC;AACA,WAAO,MAAM;AAAA;;AACX,kBAAAP,MAAM,UAAN,gEAAQC,OAAR,sEAAiBQ,GAAjB,CAAqB,gBAArB,EAAuCH,aAAvC;AACA,kBAAAN,MAAM,UAAN,gEAAQC,OAAR,sEAAiBQ,GAAjB,CAAqB,gBAArB,EAAuCF,eAAvC;AACD,KAHD;AAIF,GAbA;AAeA,SAAO;AAACT,IAAAA,OAAD;AAAUI,IAAAA;AAAV,GAAP;AACD","sourcesContent":["import { useConfluxJSDefined } from \"./\";\nimport { useEffectOnce } from \"react-use\";\nimport { useState } from \"react\";\n\nexport const UPDATE_CHAINID_SWR_ID = \"UPDATE_CHAINID_SWR_ID\";\nexport const UPDATE_NETWORKID_SWR_ID = \"UPDATE_NETWORKID_SWR_ID\";\n\nexport default function useChainNetId() {\n  useConfluxJSDefined();\n\n  const [chainId, setChainId] = useState(window?.conflux?.chainId);\n  const [networkId, setNetworkId] = useState(parseInt(window?.conflux?.networkVersion ,10) || null);\n\n  useEffectOnce(() => {\n    const chainListener = (chainId) => {\n      setChainId(chainId);\n    };\n    const networkListener = (networkId) => {\n      setNetworkId(parseInt(networkId, 10) || null);\n    };\n    window?.conflux?.on(\"chainIdChanged\", chainListener);\n    window?.conflux?.on(\"networkChanged\", networkListener);\n    return () => {\n      window?.conflux?.off(\"chainIdChanged\", chainListener);\n      window?.conflux?.off(\"networkChanged\", networkListener);\n    };\n })\n\n  return {chainId, networkId}\n}"],"file":"useChainNetId.js"}