{"version":3,"sources":["../src/useConfluxPortal.js"],"names":["openHomePage","window","open","validAddresses","addresses","Array","isArray","length","isPortalInstalled","conflux","isConfluxPortal","useConfluxPortal","tokenAddrs","autoRefreshOnNetworkChange","localStorage","getItem","removeItem","address","setAddress","undefined","chainId","networkId","error","setError","send","method","then","accounts","setItem","login","fallbackFn","hasAddr","catch","useEnsurePortalLogin","balance","tokenBalances","accountListener","newAccounts","on","off","portalInstalled","Boolean","balances","confluxJS"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useEffectOnce } from \"react-use\";\nimport { useConfluxJSDefined, useSWR } from \"./\";\nimport { useBalance } from \"./\";\nimport { useChainNetId } from './';\n\nfunction openHomePage() {\n  window.open(\"https://portal.confluxnetwork.org\");\n}\n\nfunction validAddresses(addresses) {\n  return Array.isArray(addresses) && addresses.length;\n}\n\nconst isPortalInstalled = () => window?.conflux?.isConfluxPortal;\n\nexport default function useConfluxPortal(tokenAddrs = []) {\n  useConfluxJSDefined();\n\n  // prevent portal auto refresh when user changes the network\n  if (window && window.conflux && window.conflux.autoRefreshOnNetworkChange)\n    window.conflux.autoRefreshOnNetworkChange = false;\n\n  if (\n    !window.conflux &&\n    window.localStorage.getItem(\"CFXJS_REACT_HOOK_PORTAL_ADDRESS_CACHE\")\n  )\n    window.localStorage.removeItem(\"CFXJS_REACT_HOOK_PORTAL_ADDRESS_CACHE\");\n\n  const [address, setAddress] = useState(\n    // NOTE: if portal is installed, there must be window.conflux here\n    window.conflux\n      ? window.localStorage.getItem(\"CFXJS_REACT_HOOK_PORTAL_ADDRESS_CACHE\") ||\n      undefined\n      : null\n  );\n\n  const { chainId, networkId } = useChainNetId()\n  const [error, setError] = useState(null)\n\n  useEffectOnce(() => {\n    window?.conflux?.send({ method: \"cfx_accounts\" }).then((accounts) => {\n      if (validAddresses(accounts)) {\n        setAddress(accounts[0]);\n        window.localStorage.setItem(\n          \"CFXJS_REACT_HOOK_PORTAL_ADDRESS_CACHE\",\n          accounts[0]\n        );\n      } else {\n        window.localStorage.removeItem(\"CFXJS_REACT_HOOK_PORTAL_ADDRESS_CACHE\");\n        setAddress(null);\n      }\n    });\n  });\n\n  const login = async (fallbackFn) => {\n    if (!window?.conflux) return\n    const hasAddr = !!address && (await window.conflux.send('cfx_accounts')).length\n    if (hasAddr) return typeof fallbackFn === 'function' ? fallbackFn() : undefined\n    return window.conflux\n      .send('cfx_requestAccounts')\n      .then(\n        (addresses) => validAddresses(addresses) && setAddress(addresses[0])\n      )\n      .catch(\n        (error) => setError(error)\n      )\n    return typeof fallbackFn === \"function\" && fallbackFn();\n  };\n\n  const useEnsurePortalLogin = () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffectOnce(login);\n  };\n\n  const [balance, tokenBalances] = useBalance(address, tokenAddrs);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffectOnce(() => {\n    const accountListener = (newAccounts) => {\n      if (validAddresses(newAccounts)) {\n        window.localStorage.setItem(\n          \"CFXJS_REACT_HOOK_PORTAL_ADDRESS_CACHE\",\n          newAccounts[0]\n        );\n        setAddress(newAccounts[0]);\n      } else {\n        if (address !== null) setAddress(null);\n        window.localStorage.removeItem(\"CFXJS_REACT_HOOK_PORTAL_ADDRESS_CACHE\");\n      }\n    };\n    window?.conflux?.on(\"accountsChanged\", accountListener);\n    return () => {\n      window?.conflux?.off(\"accountsChanged\", accountListener);\n    };\n  });\n\n  return {\n    portalInstalled: Boolean(isPortalInstalled()),\n    address,\n    balances: [balance, tokenBalances],\n    networkId,\n    chainId,\n    error,\n    login,\n    useEnsurePortalLogin,\n    conflux: window?.conflux,\n    confluxJS: window?.confluxJS,\n  };\n}\n\nuseConfluxPortal.openHomePage = openHomePage;\n"],"file":"useConfluxPortal.js"}