{"version":3,"sources":["../src/useConfirmationRiskByHash.js"],"names":["GET_CONFIRMATION_RISK_SWR_ID","useConfirmationRiskByHash","blockHash","data","confirmationRisk","error","getConfirmationRiskError","window","confluxJS","getConfirmationRiskByHash","console","message"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,4BAA4B,GAAG,8BAArC;;AAEe,SAASC,yBAAT,CAAmCC,SAAnC,EAA8C;AAC3D,QAAM;AACJC,IAAAA,IAAI,EAAEC,gBADF;AAEJC,IAAAA,KAAK,EAAEC;AAFH,MAGF,yBACFJ,SAAS,GAAG,CAACF,4BAAD,EAA+BE,SAA/B,CAAH,GAA+C,IADtD,EAEF;AAAA;;AAAA,sBAAMK,MAAN,iEAAM,QAAQC,SAAd,sDAAM,kBAAmBC,yBAAnB,CAA6CP,SAA7C,CAAN;AAAA,GAFE,CAHJ;AAQA,MAAII,wBAAJ,EACEI,OAAO,CAACL,KAAR,CACG,+BAA8BC,wBAAwB,CAACK,OAAQ,EADlE;AAIF,SAAOP,gBAAP;AACD","sourcesContent":["import { useEpochNumberSWR } from \"./\";\n\nconst GET_CONFIRMATION_RISK_SWR_ID = \"GET_CONFIRMATION_RISK_SWR_ID\";\n\nexport default function useConfirmationRiskByHash(blockHash) {\n  const {\n    data: confirmationRisk,\n    error: getConfirmationRiskError,\n  } = useEpochNumberSWR(\n    blockHash ? [GET_CONFIRMATION_RISK_SWR_ID, blockHash] : null,\n    () => window?.confluxJS?.getConfirmationRiskByHash(blockHash)\n  );\n\n  if (getConfirmationRiskError)\n    console.error(\n      `Error get confirmationRisk: ${getConfirmationRiskError.message}`\n    );\n\n  return confirmationRisk;\n}\n"],"file":"useConfirmationRiskByHash.js"}