"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useChainNetId;
exports.UPDATE_NETWORKID_SWR_ID = exports.UPDATE_CHAINID_SWR_ID = void 0;

var _ = require("./");

var _reactUse = require("react-use");

var _react = require("react");

const UPDATE_CHAINID_SWR_ID = "UPDATE_CHAINID_SWR_ID";
exports.UPDATE_CHAINID_SWR_ID = UPDATE_CHAINID_SWR_ID;
const UPDATE_NETWORKID_SWR_ID = "UPDATE_NETWORKID_SWR_ID";
exports.UPDATE_NETWORKID_SWR_ID = UPDATE_NETWORKID_SWR_ID;

function useChainNetId() {
  var _window, _window$conflux, _window2, _window2$conflux;

  (0, _.useConfluxJSDefined)();
  const [chainId, setChainId] = (0, _react.useState)((_window = window) === null || _window === void 0 ? void 0 : (_window$conflux = _window.conflux) === null || _window$conflux === void 0 ? void 0 : _window$conflux.chainId);
  const [networkId, setNetworkId] = (0, _react.useState)(parseInt((_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$conflux = _window2.conflux) === null || _window2$conflux === void 0 ? void 0 : _window2$conflux.networkVersion, 10) || null);
  (0, _reactUse.useEffectOnce)(() => {
    var _window3, _window3$conflux, _window4, _window4$conflux;

    const chainListener = chainId => {
      setChainId(chainId);
    };

    const networkListener = networkId => {
      setNetworkId(parseInt(networkId, 10) || null);
    };

    (_window3 = window) === null || _window3 === void 0 ? void 0 : (_window3$conflux = _window3.conflux) === null || _window3$conflux === void 0 ? void 0 : _window3$conflux.on("chainIdChanged", chainListener);
    (_window4 = window) === null || _window4 === void 0 ? void 0 : (_window4$conflux = _window4.conflux) === null || _window4$conflux === void 0 ? void 0 : _window4$conflux.on("networkChanged", networkListener);
    return () => {
      var _window5, _window5$conflux, _window6, _window6$conflux;

      (_window5 = window) === null || _window5 === void 0 ? void 0 : (_window5$conflux = _window5.conflux) === null || _window5$conflux === void 0 ? void 0 : _window5$conflux.off("chainIdChanged", chainListener);
      (_window6 = window) === null || _window6 === void 0 ? void 0 : (_window6$conflux = _window6.conflux) === null || _window6$conflux === void 0 ? void 0 : _window6$conflux.off("networkChanged", networkListener);
    };
  });
  return {
    chainId,
    networkId
  };
}
//# sourceMappingURL=useChainNetId.js.map