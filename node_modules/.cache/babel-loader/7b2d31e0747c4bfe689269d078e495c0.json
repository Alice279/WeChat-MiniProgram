{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/pages/Shuttle/ShuttleForm/ChainSelect.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/**\n * Choose the chain on Shuttle page\n */\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { SupportedChains, KeyOfCfx, ChainConfig } from '../../../constants/chainConfig';\nimport { Menu, Dropdown } from '../../../components';\nimport { ArrowDownFilled } from '../../../assets/svg';\nimport { ChainItem } from '../../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChainSelect({\n  type,\n  chain,\n  fromChain,\n  onClick,\n  id,\n  ...props\n}) {\n  _s();\n\n  const chainsData = useChainsData(type, chain, fromChain);\n\n  const onClickHandler = key => {\n    onClick && onClick(key, type);\n  };\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    children: chainsData.map(item => /*#__PURE__*/_jsxDEV(Menu.Item, {\n      itemKey: item.key,\n      onClick: onClickHandler,\n      selected: item.selected,\n      disabled: item.disabled,\n      icon: item.icon,\n      children: item.name\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    id: `${id}-dropdown`,\n    overlay: menu,\n    placement: \"bottomLeft\",\n    trigger: ['click'],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-26.5 h-24.5 rounded bg-gray-10 p-3 mr-3 flex items-end justify-between cursor-pointer\",\n      \"aria-hidden\": \"true\",\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(ChainItem, {\n        chain: chain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowDownFilled, {\n        className: \"w-4 h-4 text-gray-40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChainSelect, \"39FN8CTi2YhpGF8rw/I5EjAafQE=\", false, function () {\n  return [useChainsData];\n});\n\n_c = ChainSelect;\nChainSelect.propTypes = {\n  type: PropTypes.oneOf(['from', 'to']).isRequired,\n  chain: PropTypes.oneOf(SupportedChains).isRequired,\n  fromChain: PropTypes.oneOf(SupportedChains),\n  // only when type === to need the value\n  onClick: PropTypes.func,\n  id: PropTypes.string\n};\nexport default ChainSelect;\n/**\n * get the data that will show in the Chain Dropdown list\n * @param {*} type\n * @param {*} chain\n * @param {*} fromChain\n */\n\nfunction useChainsData(type, chain, fromChain) {\n  _s2();\n\n  const [chains, setChains] = useState([]);\n  useEffect(() => {\n    let chainArr = [];\n\n    switch (type) {\n      case 'from':\n        SupportedChains.forEach(chainName => {\n          const chain = ChainConfig[chainName];\n          let item = {};\n          item.key = chain.key;\n          item.name = chain.fullName;\n          item.icon = chain.icon('!h-6 !w-6');\n          item.disabled = false;\n\n          if (chainName === chain) {\n            item.selected = true;\n          } else {\n            item.selected = false;\n          }\n\n          chainArr.push(item);\n        });\n        break;\n\n      case 'to':\n        SupportedChains.forEach(chainName => {\n          const chain = ChainConfig[chainName];\n          let item = {};\n          item.key = chain.key;\n          item.name = chain.fullName;\n          item.icon = chain.icon('!h-6 !w-6');\n\n          if (fromChain !== KeyOfCfx) {\n            if (chainName !== KeyOfCfx) {\n              item.disabled = true;\n            } else {\n              item.disabled = false;\n            }\n          } else {\n            if (chainName === KeyOfCfx) {\n              item.disabled = true;\n            } else {\n              item.disabled = false;\n            }\n          }\n\n          if (chainName === chain) {\n            item.selected = true;\n          } else {\n            item.selected = false;\n          }\n\n          chainArr.push(item);\n        });\n        break;\n    }\n\n    setChains(chainArr);\n  }, [type, chain, fromChain]);\n  return chains;\n}\n\n_s2(useChainsData, \"XjGcHPwkilbcUVLgYJS2LQtkmcA=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ChainSelect\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/pages/Shuttle/ShuttleForm/ChainSelect.js"],"names":["PropTypes","useState","useEffect","SupportedChains","KeyOfCfx","ChainConfig","Menu","Dropdown","ArrowDownFilled","ChainItem","ChainSelect","type","chain","fromChain","onClick","id","props","chainsData","useChainsData","onClickHandler","key","menu","map","item","selected","disabled","icon","name","propTypes","oneOf","isRequired","func","string","chains","setChains","chainArr","forEach","chainName","fullName","push"],"mappings":"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","sourcesContent":["/**\n * Choose the chain on Shuttle page\n */\nimport PropTypes from 'prop-types'\nimport {useState, useEffect} from 'react'\n\nimport {\n  SupportedChains,\n  KeyOfCfx,\n  ChainConfig,\n} from '../../../constants/chainConfig'\nimport {Menu, Dropdown} from '../../../components'\nimport {ArrowDownFilled} from '../../../assets/svg'\nimport {ChainItem} from '../../components'\n\nfunction ChainSelect({type, chain, fromChain, onClick, id, ...props}) {\n  const chainsData = useChainsData(type, chain, fromChain)\n  const onClickHandler = key => {\n    onClick && onClick(key, type)\n  }\n  const menu = (\n    <Menu>\n      {chainsData.map(item => (\n        <Menu.Item\n          itemKey={item.key}\n          key={item.key}\n          onClick={onClickHandler}\n          selected={item.selected}\n          disabled={item.disabled}\n          icon={item.icon}\n        >\n          {item.name}\n        </Menu.Item>\n      ))}\n    </Menu>\n  )\n\n  return (\n    <Dropdown\n      id={`${id}-dropdown`}\n      overlay={menu}\n      placement=\"bottomLeft\"\n      trigger={['click']}\n    >\n      <div\n        className=\"w-26.5 h-24.5 rounded bg-gray-10 p-3 mr-3 flex items-end justify-between cursor-pointer\"\n        aria-hidden=\"true\"\n        {...props}\n      >\n        <ChainItem chain={chain} />\n        <ArrowDownFilled className=\"w-4 h-4 text-gray-40\" />\n      </div>\n    </Dropdown>\n  )\n}\n\nChainSelect.propTypes = {\n  type: PropTypes.oneOf(['from', 'to']).isRequired,\n  chain: PropTypes.oneOf(SupportedChains).isRequired,\n  fromChain: PropTypes.oneOf(SupportedChains), // only when type === to need the value\n  onClick: PropTypes.func,\n  id: PropTypes.string,\n}\n\nexport default ChainSelect\n\n/**\n * get the data that will show in the Chain Dropdown list\n * @param {*} type\n * @param {*} chain\n * @param {*} fromChain\n */\nfunction useChainsData(type, chain, fromChain) {\n  const [chains, setChains] = useState([])\n  useEffect(() => {\n    let chainArr = []\n    switch (type) {\n      case 'from':\n        SupportedChains.forEach(chainName => {\n          const chain = ChainConfig[chainName]\n          let item = {}\n          item.key = chain.key\n          item.name = chain.fullName\n          item.icon = chain.icon('!h-6 !w-6')\n          item.disabled = false\n          if (chainName === chain) {\n            item.selected = true\n          } else {\n            item.selected = false\n          }\n          chainArr.push(item)\n        })\n        break\n      case 'to':\n        SupportedChains.forEach(chainName => {\n          const chain = ChainConfig[chainName]\n          let item = {}\n          item.key = chain.key\n          item.name = chain.fullName\n          item.icon = chain.icon('!h-6 !w-6')\n          if (fromChain !== KeyOfCfx) {\n            if (chainName !== KeyOfCfx) {\n              item.disabled = true\n            } else {\n              item.disabled = false\n            }\n          } else {\n            if (chainName === KeyOfCfx) {\n              item.disabled = true\n            } else {\n              item.disabled = false\n            }\n          }\n          if (chainName === chain) {\n            item.selected = true\n          } else {\n            item.selected = false\n          }\n          chainArr.push(item)\n        })\n        break\n    }\n    setChains(chainArr)\n  }, [type, chain, fromChain])\n  return chains\n}\n"]},"metadata":{},"sourceType":"module"}