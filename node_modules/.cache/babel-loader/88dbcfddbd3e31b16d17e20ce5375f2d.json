{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/pages/components/TransactionReceiptionModal/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Modal, Loading, Button, Link } from '../../../components';\nimport { SupportedChains, ChainConfig, WalletConfig, KeyOfMetaMask } from '../../../constants/chainConfig';\nimport { ErrorOutlined, SuccessOutlined, MetamaskLogo } from '../../../assets/svg';\nimport useAddTokenToMetamask from '../../../hooks/useAddTokenToMetamask';\nimport { useIsNativeToken } from '../../../hooks/useWallet';\nimport { TxReceiptModalType } from '../../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TransactionReceiptionModal({\n  open,\n  type,\n  toChain,\n  fromChain,\n  value,\n  fromToken,\n  toToken,\n  txHash,\n  onClose\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    addToken,\n    success\n  } = useAddTokenToMetamask(toToken);\n  const isNativeToken = useIsNativeToken(toChain, toToken === null || toToken === void 0 ? void 0 : toToken.address);\n  let content;\n\n  const onAddToken = () => {\n    if (success) return;\n    addToken();\n  };\n\n  if (type === 'ongoing') {\n    const tokenSymbol = fromToken && fromToken.display_symbol;\n    const chain = ChainConfig[toChain].fullName;\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          i18nKey: \"shuttleInfo\",\n          values: {\n            value,\n            tokenSymbol,\n            chain\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-warning-10 text-warning-dark w-full px-6 pt-3 pb-6 mt-4 text-center\",\n        children: t('confirm', {\n          wallet: WalletConfig[ChainConfig[fromChain].wallet].name\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      icon: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this),\n      title: t('waiting'),\n      content: content,\n      className: \"!pb-0 !px-0\",\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'success') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: ChainConfig[fromChain].scanTxUrl + txHash,\n        target: \"_blank\",\n        children: t('viewOnScan')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), ChainConfig[toChain].wallet === KeyOfMetaMask && !isNativeToken && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        fullWidth: true,\n        className: \"mt-4\",\n        endIcon: !success ? /*#__PURE__*/_jsxDEV(MetamaskLogo, {\n          alt: \"metamaskLogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this) : null,\n        disabled: success // TODO: deal with metamask is not installed\n        ,\n        onClick: onAddToken,\n        children: success ? t('addedTokenToMetaMask', {\n          tokenSymbol: toToken && toToken.display_symbol\n        }) : t('addTokenToMetaMask', {\n          tokenSymbol: toToken && toToken.display_symbol\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      title: t('submitted'),\n      icon: /*#__PURE__*/_jsxDEV(SuccessOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this),\n      content: content,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'error') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-base font-medium text-error flex justify-center\",\n      children: t('rejected')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      icon: /*#__PURE__*/_jsxDEV(ErrorOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this),\n      content: content,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(TransactionReceiptionModal, \"GEis4YCCYOqvkKCA/bHRqLTwRtA=\", false, function () {\n  return [useTranslation, useAddTokenToMetamask, useIsNativeToken];\n});\n\n_c = TransactionReceiptionModal;\nTransactionReceiptionModal.propTypes = {\n  open: PropTypes.bool,\n  type: PropTypes.oneOf(Object.values(TxReceiptModalType)).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains),\n  fromChain: PropTypes.oneOf(SupportedChains),\n  value: PropTypes.string,\n  fromToken: PropTypes.object,\n  toToken: PropTypes.object,\n  txHash: PropTypes.string\n};\nexport default TransactionReceiptionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionReceiptionModal\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/pages/components/TransactionReceiptionModal/index.js"],"names":["PropTypes","useTranslation","Trans","Modal","Loading","Button","Link","SupportedChains","ChainConfig","WalletConfig","KeyOfMetaMask","ErrorOutlined","SuccessOutlined","MetamaskLogo","useAddTokenToMetamask","useIsNativeToken","TxReceiptModalType","TransactionReceiptionModal","open","type","toChain","fromChain","value","fromToken","toToken","txHash","onClose","t","addToken","success","isNativeToken","address","content","onAddToken","tokenSymbol","display_symbol","chain","fullName","wallet","name","scanTxUrl","propTypes","bool","oneOf","Object","values","isRequired","string","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport {useTranslation, Trans} from 'react-i18next'\nimport {Modal, Loading, Button, Link} from '../../../components'\nimport {\n  SupportedChains,\n  ChainConfig,\n  WalletConfig,\n  KeyOfMetaMask,\n} from '../../../constants/chainConfig'\nimport {ErrorOutlined, SuccessOutlined, MetamaskLogo} from '../../../assets/svg'\nimport useAddTokenToMetamask from '../../../hooks/useAddTokenToMetamask'\nimport {useIsNativeToken} from '../../../hooks/useWallet'\nimport {TxReceiptModalType} from '../../../constants'\n\nfunction TransactionReceiptionModal({\n  open,\n  type,\n  toChain,\n  fromChain,\n  value,\n  fromToken,\n  toToken,\n  txHash,\n  onClose,\n}) {\n  const {t} = useTranslation()\n  const {addToken, success} = useAddTokenToMetamask(toToken)\n  const isNativeToken = useIsNativeToken(toChain, toToken?.address)\n  let content\n  const onAddToken = () => {\n    if (success) return\n    addToken()\n  }\n  if (type === 'ongoing') {\n    const tokenSymbol = fromToken && fromToken.display_symbol\n    const chain = ChainConfig[toChain].fullName\n    content = (\n      <div className=\"flex flex-col items-center\">\n        <span>\n          <Trans i18nKey=\"shuttleInfo\" values={{value, tokenSymbol, chain}} />\n        </span>\n        <div className=\"bg-warning-10 text-warning-dark w-full px-6 pt-3 pb-6 mt-4 text-center\">\n          {t('confirm', {\n            wallet: WalletConfig[ChainConfig[fromChain].wallet].name,\n          })}\n        </div>\n      </div>\n    )\n    return (\n      <Modal\n        open={open}\n        icon={<Loading />}\n        title={t('waiting')}\n        content={content}\n        className=\"!pb-0 !px-0\"\n        onClose={onClose}\n      />\n    )\n  } else if (type === 'success') {\n    content = (\n      <div className=\"flex flex-1 flex-col items-center\">\n        <Link href={ChainConfig[fromChain].scanTxUrl + txHash} target=\"_blank\">\n          {t('viewOnScan')}\n        </Link>\n        {ChainConfig[toChain].wallet === KeyOfMetaMask && !isNativeToken && (\n          <Button\n            variant=\"outlined\"\n            fullWidth\n            className=\"mt-4\"\n            endIcon={!success ? <MetamaskLogo alt=\"metamaskLogo\" /> : null}\n            disabled={success}\n            // TODO: deal with metamask is not installed\n            onClick={onAddToken}\n          >\n            {success\n              ? t('addedTokenToMetaMask', {\n                  tokenSymbol: toToken && toToken.display_symbol,\n                })\n              : t('addTokenToMetaMask', {\n                  tokenSymbol: toToken && toToken.display_symbol,\n                })}\n          </Button>\n        )}\n      </div>\n    )\n    return (\n      <Modal\n        open={open}\n        title={t('submitted')}\n        icon={<SuccessOutlined />}\n        content={content}\n        onClose={onClose}\n      />\n    )\n  } else if (type === 'error') {\n    content = (\n      <div className=\"text-base font-medium text-error flex justify-center\">\n        {t('rejected')}\n      </div>\n    )\n    return (\n      <Modal\n        open={open}\n        icon={<ErrorOutlined />}\n        content={content}\n        onClose={onClose}\n      />\n    )\n  }\n}\n\nTransactionReceiptionModal.propTypes = {\n  open: PropTypes.bool,\n  type: PropTypes.oneOf(Object.values(TxReceiptModalType)).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains),\n  fromChain: PropTypes.oneOf(SupportedChains),\n  value: PropTypes.string,\n  fromToken: PropTypes.object,\n  toToken: PropTypes.object,\n  txHash: PropTypes.string,\n}\n\nexport default TransactionReceiptionModal\n"]},"metadata":{},"sourceType":"module"}