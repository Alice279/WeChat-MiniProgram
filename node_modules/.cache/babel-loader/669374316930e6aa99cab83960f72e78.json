{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/pages/Shuttle/ConfirmModal/ConfirmTips.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { SupportedChains, ChainConfig } from '../../../constants/chainConfig';\nimport { Checkbox, Circle } from '../../../components';\nimport { useIsBtcChain, useIsCfxChain } from '../../../hooks';\nimport { ShuttleInButton, ShuttleOutButton } from './ShuttleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConfirmTips({\n  fromChain,\n  toChain,\n  ...props\n}) {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const isBtcChain = useIsBtcChain(toChain);\n  const isCfxChain = useIsCfxChain(toChain);\n  let BtnComp = isCfxChain ? ShuttleInButton : ShuttleOutButton;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"confirmTips\",\n    className: \"flex w-full flex-col mt-6 bg-gray-10 px-6 pb-6 pt-4 text-gray-80 text-xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm\",\n      children: t('tips.mustKnow')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), isBtcChain ? t('tips.toBtcAddressTip') : t('tips.addressTip')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !isBtcChain && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center whitespace-pre\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Trans, {\n        i18nKey: \"tips.forbiddenAddressTip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), !isBtcChain && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center whitespace-pre\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Trans, {\n        i18nKey: \"tips.gasTip\",\n        values: {\n          fromChain: ChainConfig[fromChain].shortName\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), isBtcChain && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), t('tips.toBtcGasTip')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), isBtcChain && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"flex items-start\",\n      children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), t('tips.btcWaitLongTip')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      id: \"checkBox\",\n      className: \"mt-4 mb-6\",\n      checked: checked,\n      onChange: () => {\n        setChecked(!checked);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-primary text-xs\",\n        children: t('checkboxLabel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BtnComp, {\n      fromChain: fromChain,\n      toChain: toChain,\n      disabled: !checked,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmTips, \"6r+Amizr1RqWAkt9jZvHrFk0m+0=\", false, function () {\n  return [useTranslation, useIsBtcChain, useIsCfxChain];\n});\n\n_c = ConfirmTips;\nConfirmTips.propTypes = {\n  fromChain: PropTypes.oneOf(SupportedChains).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains).isRequired\n};\nexport default ConfirmTips;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmTips\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/pages/Shuttle/ConfirmModal/ConfirmTips.js"],"names":["useState","PropTypes","useTranslation","Trans","SupportedChains","ChainConfig","Checkbox","Circle","useIsBtcChain","useIsCfxChain","ShuttleInButton","ShuttleOutButton","ConfirmTips","fromChain","toChain","props","checked","setChecked","t","isBtcChain","isCfxChain","BtnComp","shortName","propTypes","oneOf","isRequired"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,EAAwBC,KAAxB,QAAoC,eAApC;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,gCAA3C;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,qBAA/B;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AACA,SAAQC,eAAR,EAAyBC,gBAAzB,QAAgD,iBAAhD;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqB,KAAGC;AAAxB,CAArB,EAAqD;AAAA;;AACnD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAMhB,cAAc,EAA1B;AACA,QAAMiB,UAAU,GAAGX,aAAa,CAACM,OAAD,CAAhC;AACA,QAAMM,UAAU,GAAGX,aAAa,CAACK,OAAD,CAAhC;AACA,MAAIO,OAAO,GAAGD,UAAU,GAAGV,eAAH,GAAqBC,gBAA7C;AAEA,sBACE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,SAAS,EAAC,0EAFZ;AAAA,4BAIE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBAA2BO,CAAC,CAAC,eAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,UAAU,GAAGD,CAAC,CAAC,sBAAD,CAAJ,GAA+BA,CAAC,CAAC,iBAAD,CAF7C;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EASG,CAACC,UAAD,iBACC;AAAM,MAAA,SAAS,EAAC,kCAAhB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,EAeG,CAACA,UAAD,iBACC;AAAM,MAAA,SAAS,EAAC,kCAAhB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,OAAO,EAAC,aADV;AAEE,QAAA,MAAM,EAAE;AAACN,UAAAA,SAAS,EAAER,WAAW,CAACQ,SAAD,CAAX,CAAuBS;AAAnC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,EAwBGH,UAAU,iBACT;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,CAAC,CAAC,kBAAD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,EA8BGC,UAAU,iBACT;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,CAAC,CAAC,qBAAD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ,eAoCE,QAAC,QAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,MAAA,OAAO,EAAEF,OAHX;AAIE,MAAA,QAAQ,EAAE,MAAM;AACdC,QAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,OANH;AAAA,6BAQE;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA,kBAAwCE,CAAC,CAAC,eAAD;AAAzC;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YApCF,eA8CE,QAAC,OAAD;AACE,MAAA,SAAS,EAAEL,SADb;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,QAAQ,EAAE,CAACE,OAHb;AAAA,SAIMD;AAJN;AAAA;AAAA;AAAA;AAAA,YA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GA9DQH,W;UAEKV,c,EACOM,a,EACAC,a;;;KAJZG,W;AAgETA,WAAW,CAACW,SAAZ,GAAwB;AACtBV,EAAAA,SAAS,EAAEZ,SAAS,CAACuB,KAAV,CAAgBpB,eAAhB,EAAiCqB,UADtB;AAEtBX,EAAAA,OAAO,EAAEb,SAAS,CAACuB,KAAV,CAAgBpB,eAAhB,EAAiCqB;AAFpB,CAAxB;AAKA,eAAeb,WAAf","sourcesContent":["import {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {useTranslation, Trans} from 'react-i18next'\nimport {SupportedChains, ChainConfig} from '../../../constants/chainConfig'\nimport {Checkbox, Circle} from '../../../components'\nimport {useIsBtcChain, useIsCfxChain} from '../../../hooks'\nimport {ShuttleInButton, ShuttleOutButton} from './ShuttleButton'\n\nfunction ConfirmTips({fromChain, toChain, ...props}) {\n  const [checked, setChecked] = useState(false)\n  const {t} = useTranslation()\n  const isBtcChain = useIsBtcChain(toChain)\n  const isCfxChain = useIsCfxChain(toChain)\n  let BtnComp = isCfxChain ? ShuttleInButton : ShuttleOutButton\n\n  return (\n    <div\n      id=\"confirmTips\"\n      className=\"flex w-full flex-col mt-6 bg-gray-10 px-6 pb-6 pt-4 text-gray-80 text-xs\"\n    >\n      <span className=\"text-sm\">{t('tips.mustKnow')}</span>\n      <span className=\"flex items-center\">\n        <Circle />\n        {isBtcChain ? t('tips.toBtcAddressTip') : t('tips.addressTip')}\n      </span>\n      {!isBtcChain && (\n        <span className=\"flex items-center whitespace-pre\">\n          <Circle />\n          <Trans i18nKey=\"tips.forbiddenAddressTip\" />\n        </span>\n      )}\n      {!isBtcChain && (\n        <span className=\"flex items-center whitespace-pre\">\n          <Circle />\n          <Trans\n            i18nKey=\"tips.gasTip\"\n            values={{fromChain: ChainConfig[fromChain].shortName}}\n          />\n        </span>\n      )}\n      {isBtcChain && (\n        <span className=\"flex items-center\">\n          <Circle />\n          {t('tips.toBtcGasTip')}\n        </span>\n      )}\n      {isBtcChain && (\n        <span className=\"flex items-start\">\n          <Circle />\n          {t('tips.btcWaitLongTip')}\n        </span>\n      )}\n      <Checkbox\n        id=\"checkBox\"\n        className=\"mt-4 mb-6\"\n        checked={checked}\n        onChange={() => {\n          setChecked(!checked)\n        }}\n      >\n        <span className=\"text-primary text-xs\">{t('checkboxLabel')}</span>\n      </Checkbox>\n      <BtnComp\n        fromChain={fromChain}\n        toChain={toChain}\n        disabled={!checked}\n        {...props}\n      />\n    </div>\n  )\n}\n\nConfirmTips.propTypes = {\n  fromChain: PropTypes.oneOf(SupportedChains).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains).isRequired,\n}\n\nexport default ConfirmTips\n"]},"metadata":{},"sourceType":"module"}