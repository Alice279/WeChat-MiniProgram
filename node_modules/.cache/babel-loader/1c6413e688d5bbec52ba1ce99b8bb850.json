{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/pages/components/Account/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { SupportedChains, WalletIcon, ChainConfig } from '../../../constants/chainConfig';\nimport { shortenAddress } from '../../../utils/address';\nimport { useIsBtcChain } from '../../../hooks';\nimport { useShuttleState } from '../../../state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Account({\n  chain,\n  className,\n  iconClassName,\n  showIcon = false,\n  address,\n  ...props\n}) {\n  _s();\n\n  const walletKey = ChainConfig[chain].wallet;\n  const isBtcChain = useIsBtcChain(chain);\n  const {\n    toBtcAddress\n  } = useShuttleState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex items-center ${className}`,\n    ...props,\n    children: [showIcon && !isBtcChain && /*#__PURE__*/_jsxDEV(WalletIcon, {\n      type: walletKey,\n      className: iconClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), !isBtcChain && address && shortenAddress(chain, address), isBtcChain && toBtcAddress && shortenAddress(chain, toBtcAddress)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Account, \"7C1kSDZK1h5+jUxXI6A7xQlKhuk=\", false, function () {\n  return [useIsBtcChain, useShuttleState];\n});\n\n_c = Account;\nAccount.propTypes = {\n  chain: PropTypes.oneOf(SupportedChains).isRequired,\n  className: PropTypes.string,\n  iconClassName: PropTypes.string,\n  showIcon: PropTypes.bool,\n  address: PropTypes.string\n};\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/pages/components/Account/index.js"],"names":["PropTypes","SupportedChains","WalletIcon","ChainConfig","shortenAddress","useIsBtcChain","useShuttleState","Account","chain","className","iconClassName","showIcon","address","props","walletKey","wallet","isBtcChain","toBtcAddress","propTypes","oneOf","isRequired","string","bool"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,eADF,EAEEC,UAFF,EAGEC,WAHF,QAIO,gCAJP;AAKA,SAAQC,cAAR,QAA6B,wBAA7B;AACA,SAAQC,aAAR,QAA4B,gBAA5B;AACA,SAAQC,eAAR,QAA8B,gBAA9B;;;AAEA,SAASC,OAAT,CAAiB;AACfC,EAAAA,KADe;AAEfC,EAAAA,SAFe;AAGfC,EAAAA,aAHe;AAIfC,EAAAA,QAAQ,GAAG,KAJI;AAKfC,EAAAA,OALe;AAMf,KAAGC;AANY,CAAjB,EAOG;AAAA;;AACD,QAAMC,SAAS,GAAGX,WAAW,CAACK,KAAD,CAAX,CAAmBO,MAArC;AACA,QAAMC,UAAU,GAAGX,aAAa,CAACG,KAAD,CAAhC;AACA,QAAM;AAACS,IAAAA;AAAD,MAAiBX,eAAe,EAAtC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,qBAAoBG,SAAU,EAA/C;AAAA,OAAsDI,KAAtD;AAAA,eACGF,QAAQ,IAAI,CAACK,UAAb,iBACC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,SAAlB;AAA6B,MAAA,SAAS,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIG,CAACM,UAAD,IAAeJ,OAAf,IAA0BR,cAAc,CAACI,KAAD,EAAQI,OAAR,CAJ3C,EAKGI,UAAU,IAAIC,YAAd,IAA8Bb,cAAc,CAACI,KAAD,EAAQS,YAAR,CAL/C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArBQV,O;UASYF,a,EACIC,e;;;KAVhBC,O;AAuBTA,OAAO,CAACW,SAAR,GAAoB;AAClBV,EAAAA,KAAK,EAAER,SAAS,CAACmB,KAAV,CAAgBlB,eAAhB,EAAiCmB,UADtB;AAElBX,EAAAA,SAAS,EAAET,SAAS,CAACqB,MAFH;AAGlBX,EAAAA,aAAa,EAAEV,SAAS,CAACqB,MAHP;AAIlBV,EAAAA,QAAQ,EAAEX,SAAS,CAACsB,IAJF;AAKlBV,EAAAA,OAAO,EAAEZ,SAAS,CAACqB;AALD,CAApB;AAOA,eAAed,OAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport {\n  SupportedChains,\n  WalletIcon,\n  ChainConfig,\n} from '../../../constants/chainConfig'\nimport {shortenAddress} from '../../../utils/address'\nimport {useIsBtcChain} from '../../../hooks'\nimport {useShuttleState} from '../../../state'\n\nfunction Account({\n  chain,\n  className,\n  iconClassName,\n  showIcon = false,\n  address,\n  ...props\n}) {\n  const walletKey = ChainConfig[chain].wallet\n  const isBtcChain = useIsBtcChain(chain)\n  const {toBtcAddress} = useShuttleState()\n\n  return (\n    <div className={`flex items-center ${className}`} {...props}>\n      {showIcon && !isBtcChain && (\n        <WalletIcon type={walletKey} className={iconClassName} />\n      )}\n      {!isBtcChain && address && shortenAddress(chain, address)}\n      {isBtcChain && toBtcAddress && shortenAddress(chain, toBtcAddress)}\n    </div>\n  )\n}\n\nAccount.propTypes = {\n  chain: PropTypes.oneOf(SupportedChains).isRequired,\n  className: PropTypes.string,\n  iconClassName: PropTypes.string,\n  showIcon: PropTypes.bool,\n  address: PropTypes.string,\n}\nexport default Account\n"]},"metadata":{},"sourceType":"module"}