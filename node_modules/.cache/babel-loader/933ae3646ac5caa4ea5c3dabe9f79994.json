{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/components/Toast/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Toast({\n  className = '',\n  open,\n  icon,\n  title,\n  content,\n  autoHideDuration = 2000,\n  type = 'block',\n  onClose,\n  ...props\n}) {\n  _s();\n\n  useEffect(() => {\n    if (open) setTimeout(() => onClose && onClose(), autoHideDuration);\n  }, [open, autoHideDuration, onClose]);\n  if (!open) return null;\n  const iconComp = icon ? /*#__PURE__*/React.cloneElement(icon, {\n    className: `w-13 h-13 mb-2 ${icon.props.className || ''}`\n  }) : null;\n\n  if (type === 'block') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute flex flex-col items-center justify-center rounded-sm bg-black bg-opacity-60 p-3 w-35 max-h-52 shadow-1 z-20 ${className}`,\n      ...props,\n      children: [iconComp, title && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-base text-white font-medium mb-0.5\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-20\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'line' || !title) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute flex items-center justify-center h-10 px-4 max-w-sm rounded-sm bg-black bg-opacity-60 shadow-1 z-20 ${className}`,\n      ...props,\n      children: [icon && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"status\",\n        className: \"mr-2 w-6 h-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-base text-white\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\n_s(Toast, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Toast;\nToast.propTypes = {\n  className: PropTypes.string,\n  open: PropTypes.bool,\n  icon: PropTypes.node,\n  title: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  autoHideDuration: PropTypes.number,\n  type: PropTypes.oneOf(['block', 'line']),\n  onClose: PropTypes.func,\n  top: PropTypes.string\n};\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/components/Toast/index.js"],"names":["PropTypes","React","useEffect","Toast","className","open","icon","title","content","autoHideDuration","type","onClose","props","setTimeout","iconComp","cloneElement","propTypes","string","bool","node","oneOfType","number","oneOf","func","top"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAASC,KAAT,CAAe;AACbC,EAAAA,SAAS,GAAG,EADC;AAEbC,EAAAA,IAFa;AAGbC,EAAAA,IAHa;AAIbC,EAAAA,KAJa;AAKbC,EAAAA,OALa;AAMbC,EAAAA,gBAAgB,GAAG,IANN;AAObC,EAAAA,IAAI,GAAG,OAPM;AAQbC,EAAAA,OARa;AASb,KAAGC;AATU,CAAf,EAUG;AAAA;;AACDV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,IAAJ,EAAUQ,UAAU,CAAC,MAAMF,OAAO,IAAIA,OAAO,EAAzB,EAA6BF,gBAA7B,CAAV;AACX,GAFQ,EAEN,CAACJ,IAAD,EAAOI,gBAAP,EAAyBE,OAAzB,CAFM,CAAT;AAGA,MAAI,CAACN,IAAL,EAAW,OAAO,IAAP;AACX,QAAMS,QAAQ,GAAGR,IAAI,gBACjBL,KAAK,CAACc,YAAN,CAAmBT,IAAnB,EAAyB;AACvBF,IAAAA,SAAS,EAAG,kBAAiBE,IAAI,CAACM,KAAL,CAAWR,SAAX,IAAwB,EAAG;AADjC,GAAzB,CADiB,GAIjB,IAJJ;;AAMA,MAAIM,IAAI,KAAK,OAAb,EAAsB;AACpB,wBACE;AACE,MAAA,SAAS,EAAG,wHAAuHN,SAAU,EAD/I;AAAA,SAEMQ,KAFN;AAAA,iBAIGE,QAJH,EAKGP,KAAK,iBACJ;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA,kBAA0DA;AAA1D;AAAA;AAAA;AAAA;AAAA,cANJ,eAQE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBAAuCC;AAAvC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD,MAaO,IAAIE,IAAI,KAAK,MAAT,IAAmB,CAACH,KAAxB,EAA+B;AACpC,wBACE;AACE,MAAA,SAAS,EAAG,gHAA+GH,SAAU,EADvI;AAAA,SAEMQ,KAFN;AAAA,iBAIGN,IAAI,iBAAI;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAgB,QAAA,GAAG,EAAC,QAApB;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAJX,eAKE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBAAuCE;AAAvC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACD,SAAO,IAAP;AACD;;GA9CQL,K;;KAAAA,K;AAgDTA,KAAK,CAACa,SAAN,GAAkB;AAChBZ,EAAAA,SAAS,EAAEJ,SAAS,CAACiB,MADL;AAEhBZ,EAAAA,IAAI,EAAEL,SAAS,CAACkB,IAFA;AAGhBZ,EAAAA,IAAI,EAAEN,SAAS,CAACmB,IAHA;AAIhBZ,EAAAA,KAAK,EAAEP,SAAS,CAACiB,MAJD;AAKhBT,EAAAA,OAAO,EAAER,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACmB,IAAX,EAAiBnB,SAAS,CAACiB,MAA3B,CAApB,CALO;AAMhBR,EAAAA,gBAAgB,EAAET,SAAS,CAACqB,MANZ;AAOhBX,EAAAA,IAAI,EAAEV,SAAS,CAACsB,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,CAPU;AAQhBX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,IARH;AAShBC,EAAAA,GAAG,EAAExB,SAAS,CAACiB;AATC,CAAlB;AAYA,eAAed,KAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport React, {useEffect} from 'react'\n\nfunction Toast({\n  className = '',\n  open,\n  icon,\n  title,\n  content,\n  autoHideDuration = 2000,\n  type = 'block',\n  onClose,\n  ...props\n}) {\n  useEffect(() => {\n    if (open) setTimeout(() => onClose && onClose(), autoHideDuration)\n  }, [open, autoHideDuration, onClose])\n  if (!open) return null\n  const iconComp = icon\n    ? React.cloneElement(icon, {\n        className: `w-13 h-13 mb-2 ${icon.props.className || ''}`,\n      })\n    : null\n\n  if (type === 'block') {\n    return (\n      <div\n        className={`absolute flex flex-col items-center justify-center rounded-sm bg-black bg-opacity-60 p-3 w-35 max-h-52 shadow-1 z-20 ${className}`}\n        {...props}\n      >\n        {iconComp}\n        {title && (\n          <div className=\"text-base text-white font-medium mb-0.5\">{title}</div>\n        )}\n        <div className=\"text-xs text-gray-20\">{content}</div>\n      </div>\n    )\n  } else if (type === 'line' || !title) {\n    return (\n      <div\n        className={`absolute flex items-center justify-center h-10 px-4 max-w-sm rounded-sm bg-black bg-opacity-60 shadow-1 z-20 ${className}`}\n        {...props}\n      >\n        {icon && <img src={icon} alt=\"status\" className=\"mr-2 w-6 h-6\" />}\n        <div className=\"text-base text-white\">{content}</div>\n      </div>\n    )\n  }\n  return null\n}\n\nToast.propTypes = {\n  className: PropTypes.string,\n  open: PropTypes.bool,\n  icon: PropTypes.node,\n  title: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n  autoHideDuration: PropTypes.number,\n  type: PropTypes.oneOf(['block', 'line']),\n  onClose: PropTypes.func,\n  top: PropTypes.string,\n}\n\nexport default Toast\n"]},"metadata":{},"sourceType":"module"}