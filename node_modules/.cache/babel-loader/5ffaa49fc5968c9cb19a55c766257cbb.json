{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/components/Link/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomLink({\n  onClick,\n  className = '',\n  children,\n  size = 'medium',\n  disabled = false,\n  startIcon,\n  endIcon,\n  ...props\n}) {\n  _s();\n\n  const disabledStyle = useMemo(() => {\n    if (disabled) {\n      return 'bg-transparent text-gray-40 cursor-not-allowed';\n    }\n\n    return '';\n  }, [disabled]);\n  const colorStyle = useMemo(() => {\n    if (disabled) return '';\n    return 'text-primary bg-transparent hover:text-primary-dark hover:underline';\n  }, [disabled]);\n  const sizeStyle = useMemo(() => {\n    if (size === 'large') return 'text-base ';\n    if (size === 'medium') return 'text-sm';\n    if (size === 'small') return 'text-xs';\n    return '';\n  }, [size]);\n  const iconColor = useMemo(() => {\n    if (disabled) return 'text-gray-40';\n    return 'text-primary hover:text-primary-dark';\n  }, [disabled]);\n  const iconSize = useMemo(() => {\n    if (size === 'large') return 'w-5 h-5';\n    if (size === 'medium') return 'w-4 h-4';\n    if (size === 'small') return 'w-3 h-3';\n  }, [size]);\n  const startIconComp = startIcon ? /*#__PURE__*/React.cloneElement(startIcon, {\n    className: `mr-2 ${iconColor} ${iconSize} ${startIcon.props.className || ''}`\n  }) : null;\n  const endIconComp = endIcon ? /*#__PURE__*/React.cloneElement(endIcon, {\n    className: `ml-2 ${iconColor} ${iconSize} ${endIcon.props.className || ''}`\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    \"aria-hidden\": \"true\",\n    onClick: e => onClick && onClick(e),\n    disabled: disabled,\n    className: `\n      flex justify-center items-center focus:outline-none rounded ${disabledStyle} ${colorStyle} ${sizeStyle} ${className}`,\n    ...props,\n    children: [startIconComp, children, endIconComp]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomLink, \"G3RzHKQJusmHEejZV0dr8UxmwdU=\");\n\n_c = CustomLink;\nCustomLink.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  startIcon: PropTypes.node,\n  endIcon: PropTypes.node\n};\nexport default CustomLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomLink\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/components/Link/index.js"],"names":["React","useMemo","PropTypes","CustomLink","onClick","className","children","size","disabled","startIcon","endIcon","props","disabledStyle","colorStyle","sizeStyle","iconColor","iconSize","startIconComp","cloneElement","endIconComp","e","propTypes","string","oneOf","bool","func","oneOfType","arrayOf","node","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,UAAT,CAAoB;AAClBC,EAAAA,OADkB;AAElBC,EAAAA,SAAS,GAAG,EAFM;AAGlBC,EAAAA,QAHkB;AAIlBC,EAAAA,IAAI,GAAG,QAJW;AAKlBC,EAAAA,QAAQ,GAAG,KALO;AAMlBC,EAAAA,SANkB;AAOlBC,EAAAA,OAPkB;AAQlB,KAAGC;AARe,CAApB,EASG;AAAA;;AACD,QAAMC,aAAa,GAAGX,OAAO,CAAC,MAAM;AAClC,QAAIO,QAAJ,EAAc;AACZ,aAAO,gDAAP;AACD;;AACD,WAAO,EAAP;AACD,GAL4B,EAK1B,CAACA,QAAD,CAL0B,CAA7B;AAOA,QAAMK,UAAU,GAAGZ,OAAO,CAAC,MAAM;AAC/B,QAAIO,QAAJ,EAAc,OAAO,EAAP;AACd,WAAO,qEAAP;AACD,GAHyB,EAGvB,CAACA,QAAD,CAHuB,CAA1B;AAKA,QAAMM,SAAS,GAAGb,OAAO,CAAC,MAAM;AAC9B,QAAIM,IAAI,KAAK,OAAb,EAAsB,OAAO,YAAP;AACtB,QAAIA,IAAI,KAAK,QAAb,EAAuB,OAAO,SAAP;AACvB,QAAIA,IAAI,KAAK,OAAb,EAAsB,OAAO,SAAP;AACtB,WAAO,EAAP;AACD,GALwB,EAKtB,CAACA,IAAD,CALsB,CAAzB;AAOA,QAAMQ,SAAS,GAAGd,OAAO,CAAC,MAAM;AAC9B,QAAIO,QAAJ,EAAc,OAAO,cAAP;AACd,WAAO,sCAAP;AACD,GAHwB,EAGtB,CAACA,QAAD,CAHsB,CAAzB;AAKA,QAAMQ,QAAQ,GAAGf,OAAO,CAAC,MAAM;AAC7B,QAAIM,IAAI,KAAK,OAAb,EAAsB,OAAO,SAAP;AACtB,QAAIA,IAAI,KAAK,QAAb,EAAuB,OAAO,SAAP;AACvB,QAAIA,IAAI,KAAK,OAAb,EAAsB,OAAO,SAAP;AACvB,GAJuB,EAIrB,CAACA,IAAD,CAJqB,CAAxB;AAMA,QAAMU,aAAa,GAAGR,SAAS,gBAC3BT,KAAK,CAACkB,YAAN,CAAmBT,SAAnB,EAA8B;AAC5BJ,IAAAA,SAAS,EAAG,QAAOU,SAAU,IAAGC,QAAS,IACvCP,SAAS,CAACE,KAAV,CAAgBN,SAAhB,IAA6B,EAC9B;AAH2B,GAA9B,CAD2B,GAM3B,IANJ;AAQA,QAAMc,WAAW,GAAGT,OAAO,gBACvBV,KAAK,CAACkB,YAAN,CAAmBR,OAAnB,EAA4B;AAC1BL,IAAAA,SAAS,EAAG,QAAOU,SAAU,IAAGC,QAAS,IACvCN,OAAO,CAACC,KAAR,CAAcN,SAAd,IAA2B,EAC5B;AAHyB,GAA5B,CADuB,GAMvB,IANJ;AAQA,sBACE;AACE,mBAAY,MADd;AAEE,IAAA,OAAO,EAAEe,CAAC,IAAIhB,OAAO,IAAIA,OAAO,CAACgB,CAAD,CAFlC;AAGE,IAAA,QAAQ,EAAEZ,QAHZ;AAIE,IAAA,SAAS,EAAG;AAClB,oEAAoEI,aAAc,IAAGC,UAAW,IAAGC,SAAU,IAAGT,SAAU,EALtH;AAAA,OAMMM,KANN;AAAA,eAQGM,aARH,EASGX,QATH,EAUGa,WAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtEQhB,U;;KAAAA,U;AAwETA,UAAU,CAACkB,SAAX,GAAuB;AACrBhB,EAAAA,SAAS,EAAEH,SAAS,CAACoB,MADA;AAErBf,EAAAA,IAAI,EAAEL,SAAS,CAACqB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAFe;AAGrBf,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,IAHC;AAIrBpB,EAAAA,OAAO,EAAEF,SAAS,CAACuB,IAJE;AAKrBnB,EAAAA,QAAQ,EAAEJ,SAAS,CAACwB,SAAV,CAAoB,CAC5BxB,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,IAA5B,CAD4B,EAE5B1B,SAAS,CAAC0B,IAFkB,CAApB,EAGPC,UARkB;AASrBpB,EAAAA,SAAS,EAAEP,SAAS,CAAC0B,IATA;AAUrBlB,EAAAA,OAAO,EAAER,SAAS,CAAC0B;AAVE,CAAvB;AAaA,eAAezB,UAAf","sourcesContent":["import React, {useMemo} from 'react'\nimport PropTypes from 'prop-types'\n\nfunction CustomLink({\n  onClick,\n  className = '',\n  children,\n  size = 'medium',\n  disabled = false,\n  startIcon,\n  endIcon,\n  ...props\n}) {\n  const disabledStyle = useMemo(() => {\n    if (disabled) {\n      return 'bg-transparent text-gray-40 cursor-not-allowed'\n    }\n    return ''\n  }, [disabled])\n\n  const colorStyle = useMemo(() => {\n    if (disabled) return ''\n    return 'text-primary bg-transparent hover:text-primary-dark hover:underline'\n  }, [disabled])\n\n  const sizeStyle = useMemo(() => {\n    if (size === 'large') return 'text-base '\n    if (size === 'medium') return 'text-sm'\n    if (size === 'small') return 'text-xs'\n    return ''\n  }, [size])\n\n  const iconColor = useMemo(() => {\n    if (disabled) return 'text-gray-40'\n    return 'text-primary hover:text-primary-dark'\n  }, [disabled])\n\n  const iconSize = useMemo(() => {\n    if (size === 'large') return 'w-5 h-5'\n    if (size === 'medium') return 'w-4 h-4'\n    if (size === 'small') return 'w-3 h-3'\n  }, [size])\n\n  const startIconComp = startIcon\n    ? React.cloneElement(startIcon, {\n        className: `mr-2 ${iconColor} ${iconSize} ${\n          startIcon.props.className || ''\n        }`,\n      })\n    : null\n\n  const endIconComp = endIcon\n    ? React.cloneElement(endIcon, {\n        className: `ml-2 ${iconColor} ${iconSize} ${\n          endIcon.props.className || ''\n        }`,\n      })\n    : null\n\n  return (\n    <a\n      aria-hidden=\"true\"\n      onClick={e => onClick && onClick(e)}\n      disabled={disabled}\n      className={`\n      flex justify-center items-center focus:outline-none rounded ${disabledStyle} ${colorStyle} ${sizeStyle} ${className}`}\n      {...props}\n    >\n      {startIconComp}\n      {children}\n      {endIconComp}\n    </a>\n  )\n}\n\nCustomLink.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  startIcon: PropTypes.node,\n  endIcon: PropTypes.node,\n}\n\nexport default CustomLink\n"]},"metadata":{},"sourceType":"module"}