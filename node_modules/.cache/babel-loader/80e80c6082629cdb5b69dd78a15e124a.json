{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupEpochListener = setupEpochListener;\nexports.useEpochNumber = useEpochNumber;\nexports.useEpochNumberFn = void 0;\n\nvar _reactUse = require(\"react-use\");\n\nvar _react = require(\"react\");\n\nvar _ = require(\"./\");\n\nlet EPOCH_NUMBER_UPDATED_EVENT_DATA = {\n  detail: undefined\n};\nconst EPOCH_NUMBER_UPDATED_EVENT = new CustomEvent(\"epochNumberUpdated\", EPOCH_NUMBER_UPDATED_EVENT_DATA);\n\nfunction dispatchEpochNumberUpdated() {\n  var _window, _window$confluxJS, _window$confluxJS$get;\n\n  (_window = window) === null || _window === void 0 ? void 0 : (_window$confluxJS = _window.confluxJS) === null || _window$confluxJS === void 0 ? void 0 : (_window$confluxJS$get = _window$confluxJS.getEpochNumber()) === null || _window$confluxJS$get === void 0 ? void 0 : _window$confluxJS$get.then(epochNumber => {\n    if (EPOCH_NUMBER_UPDATED_EVENT_DATA.detail === epochNumber) return;\n    EPOCH_NUMBER_UPDATED_EVENT_DATA.detail = epochNumber;\n    window.dispatchEvent(EPOCH_NUMBER_UPDATED_EVENT);\n  });\n}\n/**\n * setup a listener to trigger a epochNumberUpdated event\n * @param {number=3000} interval the interval to detect epoch number change\n */\n\n\nfunction setupEpochListener(interval = 3000) {\n  if (!window || !window.confluxJS) return;\n  if (window.__EPOCH_NUMBER_UPDATED_EVENT_INTERVAL !== undefined) clearInterval(__EPOCH_NUMBER_UPDATED_EVENT_INTERVAL);\n  dispatchEpochNumberUpdated();\n  window.__EPOCH_NUMBER_UPDATED_EVENT_INTERVAL = setInterval(dispatchEpochNumberUpdated, interval);\n}\n/**\n * hook to get the current epoch number, trigger rerender when epoch number changes\n * @returns {number|undefined} current epoch number or undefined\n */\n\n\nfunction useEpochNumber() {\n  const confluxJSDefined = (0, _.useConfluxJSDefined)();\n  (0, _react.useEffect)(() => {\n    if (confluxJSDefined) setupEpochListener();\n  }, [confluxJSDefined]);\n  const [epochNumber, setEpochNumber] = (0, _react.useState)(EPOCH_NUMBER_UPDATED_EVENT_DATA.detail);\n  (0, _reactUse.useEvent)(\"epochNumberUpdated\", () => {\n    setEpochNumber(EPOCH_NUMBER_UPDATED_EVENT_DATA.detail);\n  });\n  return epochNumber;\n}\n\nconst useEpochNumberFn = cb => (0, _reactUse.useEvent)(\"epochNumberUpdated\", cb(EPOCH_NUMBER_UPDATED_EVENT_DATA.detail));\n\nexports.useEpochNumberFn = useEpochNumberFn;","map":{"version":3,"sources":["../src/useEpochNumber.js"],"names":["EPOCH_NUMBER_UPDATED_EVENT_DATA","detail","undefined","EPOCH_NUMBER_UPDATED_EVENT","epochNumber","window","interval","clearInterval","dispatchEpochNumberUpdated","setInterval","confluxJSDefined","setupEpochListener","setEpochNumber","useEpochNumberFn","cb"],"mappings":";;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,CAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,IAAIA,+BAA+B,GAAG;AAAEC,EAAAA,MAAM,EAAEC;AAAV,CAAtC;AACA,MAAMC,0BAA0B,GAAG,IAAA,WAAA,CAAA,oBAAA,EAAnC,+BAAmC,CAAnC;;AAKA,SAAA,0BAAA,GAAsC;AAAA,MAAA,OAAA,EAAA,iBAAA,EAAA,qBAAA;;AACpC,GAAA,OAAA,GAAA,MAAA,MAAA,IAAA,IAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,GAAA,OAAA,CAAA,SAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAA,iBAAA,CAAA,cAAA,EAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,IAAA,CAA2CC,WAAD,IAAiB;AACzD,QAAIJ,+BAA+B,CAA/BA,MAAAA,KAAJ,WAAA,EAA4D;AAC5DA,IAAAA,+BAA+B,CAA/BA,MAAAA,GAAAA,WAAAA;AACAK,IAAAA,MAAM,CAANA,aAAAA,CAAAA,0BAAAA;AAHF,GAAA,CAAA;AAKD;AAED;AACA;AACA;AACA;;;AACO,SAAA,kBAAA,CAA4BC,QAAQ,GAApC,IAAA,EAA6C;AAClD,MAAI,CAAA,MAAA,IAAW,CAACD,MAAM,CAAtB,SAAA,EAAkC;AAClC,MAAIA,MAAM,CAANA,qCAAAA,KAAJ,SAAA,EACEE,aAAa,CAAbA,qCAAa,CAAbA;AACFC,EAAAA,0BAA0B;AAC1BH,EAAAA,MAAM,CAANA,qCAAAA,GAA+CI,WAAW,CAAA,0BAAA,EAA1DJ,QAA0D,CAA1DA;AAID;AAED;AACA;AACA;AACA;;;AACO,SAAA,cAAA,GAA0B;AAC/B,QAAMK,gBAAgB,GAAG,CAAA,GAAA,CAAA,CAAzB,mBAAyB,GAAzB;AACA,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,MAAM;AACd,QAAA,gBAAA,EAAsBC,kBAAkB;AAD1C,GAAA,EAEG,CAFH,gBAEG,CAFH;AAIA,QAAM,CAAA,WAAA,EAAA,cAAA,IAAgC,CAAA,GAAA,MAAA,CAAA,QAAA,EACpCX,+BAA+B,CADjC,MAAsC,CAAtC;AAGA,GAAA,GAAA,SAAA,CAAA,QAAA,EAAA,oBAAA,EAA+B,MAAM;AACnCY,IAAAA,cAAc,CAACZ,+BAA+B,CAA9CY,MAAc,CAAdA;AADF,GAAA;AAIA,SAAA,WAAA;AACD;;AAEM,MAAMC,gBAAgB,GAAIC,EAAD,IAC9B,CAAA,GAAA,SAAA,CAAA,QAAA,EAAA,oBAAA,EAA+BA,EAAE,CAACd,+BAA+B,CAD5D,MAC4B,CAAjC,CADK","sourcesContent":["import { useEvent } from \"react-use\";\nimport { useState, useEffect } from \"react\";\nimport { useConfluxJSDefined } from \"./\";\n\nlet EPOCH_NUMBER_UPDATED_EVENT_DATA = { detail: undefined };\nconst EPOCH_NUMBER_UPDATED_EVENT = new CustomEvent(\n  \"epochNumberUpdated\",\n  EPOCH_NUMBER_UPDATED_EVENT_DATA\n);\n\nfunction dispatchEpochNumberUpdated() {\n  window?.confluxJS?.getEpochNumber()?.then((epochNumber) => {\n    if (EPOCH_NUMBER_UPDATED_EVENT_DATA.detail === epochNumber) return;\n    EPOCH_NUMBER_UPDATED_EVENT_DATA.detail = epochNumber;\n    window.dispatchEvent(EPOCH_NUMBER_UPDATED_EVENT);\n  });\n}\n\n/**\n * setup a listener to trigger a epochNumberUpdated event\n * @param {number=3000} interval the interval to detect epoch number change\n */\nexport function setupEpochListener(interval = 3000) {\n  if (!window || !window.confluxJS) return;\n  if (window.__EPOCH_NUMBER_UPDATED_EVENT_INTERVAL !== undefined)\n    clearInterval(__EPOCH_NUMBER_UPDATED_EVENT_INTERVAL);\n  dispatchEpochNumberUpdated();\n  window.__EPOCH_NUMBER_UPDATED_EVENT_INTERVAL = setInterval(\n    dispatchEpochNumberUpdated,\n    interval\n  );\n}\n\n/**\n * hook to get the current epoch number, trigger rerender when epoch number changes\n * @returns {number|undefined} current epoch number or undefined\n */\nexport function useEpochNumber() {\n  const confluxJSDefined = useConfluxJSDefined();\n  useEffect(() => {\n    if (confluxJSDefined) setupEpochListener();\n  }, [confluxJSDefined]);\n\n  const [epochNumber, setEpochNumber] = useState(\n    EPOCH_NUMBER_UPDATED_EVENT_DATA.detail\n  );\n  useEvent(\"epochNumberUpdated\", () => {\n    setEpochNumber(EPOCH_NUMBER_UPDATED_EVENT_DATA.detail);\n  });\n\n  return epochNumber;\n}\n\nexport const useEpochNumberFn = (cb) =>\n  useEvent(\"epochNumberUpdated\", cb(EPOCH_NUMBER_UPDATED_EVENT_DATA.detail));\n"]},"metadata":{},"sourceType":"script"}