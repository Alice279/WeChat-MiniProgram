{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/components/Tag/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '../../assets/svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tag({\n  onClose,\n  onClick,\n  className = '',\n  children,\n  size = 'medium',\n  color = 'primary',\n  icon,\n  closeIcon,\n  disabled = false,\n  closable = false,\n  ...props\n}) {\n  _s();\n\n  const disabledStyle = useMemo(() => {\n    if (disabled) {\n      return 'bg-gray-20 text-gray-40 cursor-not-allowed';\n    }\n\n    return '';\n  }, [disabled]);\n  const colorStyle = useMemo(() => {\n    if (disabled) return '';\n\n    if (color === 'primary') {\n      return 'text-primary bg-primary-10 hover:border hover:border-primary';\n    } else if (color === 'error') {\n      return 'text-error bg-error-10 hover:border hover:border-error';\n    }\n\n    return '';\n  }, [disabled, color]);\n  const sizeStyle = useMemo(() => {\n    if (size === 'medium') return 'text-xs h-6 px-2';\n    if (size === 'small') return 'text-2xs h-4 px-1';\n    return '';\n  }, [size]);\n  const iconColor = useMemo(() => {\n    if (disabled) return 'text-gray-40';\n    if (color === 'primary') return 'text-primary';\n    if (color === 'error') return 'text-error';\n  }, [disabled, color]);\n  const iconSize = useMemo(() => {\n    if (size === 'medium') return 'w-3 h-3';\n    if (size === 'small') return 'w-2 h-2';\n  }, [size]);\n\n  const onCloseClick = e => {\n    e.stopPropagation();\n    !disabled && onClose && onClose(e);\n  };\n\n  const iconComp = icon ? /*#__PURE__*/React.cloneElement(icon, {\n    className: `mr-1 ${iconColor} ${iconSize} ${icon.props.className || ''}`\n  }) : null;\n  const closeIconComp = closeIcon ? /*#__PURE__*/React.cloneElement(closeIcon, {\n    className: `${iconColor} ${iconSize} ${closeIcon.props.className || ''}`\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: e => onClick && onClick(e),\n    disabled: disabled,\n    className: `\n      flex justify-center items-center focus:outline-none rounded ${disabledStyle} ${colorStyle} ${sizeStyle} ${className}`,\n    ...props,\n    children: [iconComp, children, closable && /*#__PURE__*/_jsxDEV(\"span\", {\n      \"aria-hidden\": \"true\",\n      onClick: e => onCloseClick(e),\n      className: `ml-1`,\n      children: closeIcon ? closeIconComp : /*#__PURE__*/_jsxDEV(Close, {\n        className: `${iconColor} ${iconSize}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"G3RzHKQJusmHEejZV0dr8UxmwdU=\");\n\n_c = Tag;\nTag.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium']),\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  icon: PropTypes.node,\n  closeIcon: PropTypes.node\n};\nexport default Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/components/Tag/index.js"],"names":["React","useMemo","PropTypes","Close","Tag","onClose","onClick","className","children","size","color","icon","closeIcon","disabled","closable","props","disabledStyle","colorStyle","sizeStyle","iconColor","iconSize","onCloseClick","e","stopPropagation","iconComp","cloneElement","closeIconComp","propTypes","string","oneOf","bool","func","oneOfType","arrayOf","node","isRequired"],"mappings":"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","sourcesContent":["import React, {useMemo} from 'react'\nimport PropTypes from 'prop-types'\nimport {Close} from '../../assets/svg'\n\nfunction Tag({\n  onClose,\n  onClick,\n  className = '',\n  children,\n  size = 'medium',\n  color = 'primary',\n  icon,\n  closeIcon,\n  disabled = false,\n  closable = false,\n  ...props\n}) {\n  const disabledStyle = useMemo(() => {\n    if (disabled) {\n      return 'bg-gray-20 text-gray-40 cursor-not-allowed'\n    }\n    return ''\n  }, [disabled])\n\n  const colorStyle = useMemo(() => {\n    if (disabled) return ''\n    if (color === 'primary') {\n      return 'text-primary bg-primary-10 hover:border hover:border-primary'\n    } else if (color === 'error') {\n      return 'text-error bg-error-10 hover:border hover:border-error'\n    }\n    return ''\n  }, [disabled, color])\n\n  const sizeStyle = useMemo(() => {\n    if (size === 'medium') return 'text-xs h-6 px-2'\n    if (size === 'small') return 'text-2xs h-4 px-1'\n    return ''\n  }, [size])\n\n  const iconColor = useMemo(() => {\n    if (disabled) return 'text-gray-40'\n    if (color === 'primary') return 'text-primary'\n    if (color === 'error') return 'text-error'\n  }, [disabled, color])\n\n  const iconSize = useMemo(() => {\n    if (size === 'medium') return 'w-3 h-3'\n    if (size === 'small') return 'w-2 h-2'\n  }, [size])\n\n  const onCloseClick = e => {\n    e.stopPropagation()\n    !disabled && onClose && onClose(e)\n  }\n\n  const iconComp = icon\n    ? React.cloneElement(icon, {\n        className: `mr-1 ${iconColor} ${iconSize} ${\n          icon.props.className || ''\n        }`,\n      })\n    : null\n\n  const closeIconComp = closeIcon\n    ? React.cloneElement(closeIcon, {\n        className: `${iconColor} ${iconSize} ${\n          closeIcon.props.className || ''\n        }`,\n      })\n    : null\n\n  return (\n    <button\n      onClick={e => onClick && onClick(e)}\n      disabled={disabled}\n      className={`\n      flex justify-center items-center focus:outline-none rounded ${disabledStyle} ${colorStyle} ${sizeStyle} ${className}`}\n      {...props}\n    >\n      {iconComp}\n      {children}\n      {closable && (\n        <span\n          aria-hidden=\"true\"\n          onClick={e => onCloseClick(e)}\n          className={`ml-1`}\n        >\n          {closeIcon ? (\n            closeIconComp\n          ) : (\n            <Close className={`${iconColor} ${iconSize}`} />\n          )}\n        </span>\n      )}\n    </button>\n  )\n}\n\nTag.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium']),\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  icon: PropTypes.node,\n  closeIcon: PropTypes.node,\n}\n\nexport default Tag\n"]},"metadata":{},"sourceType":"module"}