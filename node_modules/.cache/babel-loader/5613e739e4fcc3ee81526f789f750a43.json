{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/components/Button/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Button({\n  onClick,\n  className = '',\n  children,\n  size = 'medium',\n  color = 'primary',\n  variant = 'contained',\n  disabled = false,\n  fullWidth = false,\n  danger = false,\n  startIcon,\n  endIcon,\n  ...props\n}) {\n  _s();\n\n  const disabledStyle = useMemo(() => {\n    if (disabled) {\n      if (variant === 'text') return 'bg-transparent text-gray-40 cursor-not-allowed';else return 'bg-gray-20 text-gray-40 cursor-not-allowed';\n    }\n\n    return '';\n  }, [disabled, variant]);\n  const colorStyle = useMemo(() => {\n    if (disabled) return '';\n\n    if (variant === 'text') {\n      if (danger) return 'text error bg-transparent hover:bg-error-10';\n      if (color === 'primary') return 'text-gray-80 bg-transparent hover:bg-gray-10';\n    } else if (variant === 'outlined') {\n      if (danger) return 'border border-error text-error bg-white hover:border-error-dark hover:text-error-dark';\n      if (color === 'primary') return 'border border-primary text-primary bg-white hover:border-primary-dark hover:text-primary-dark';\n    } else if (variant === 'contained') {\n      if (danger) return 'text-white bg-error hover:bg-error-dark';\n      if (color === 'primary') return 'text-white bg-primary hover:bg-primary-dark';\n    }\n\n    return '';\n  }, [disabled, variant, color, danger]);\n  const sizeStyle = useMemo(() => {\n    if (size === 'large') return 'text-base h-12';\n    if (size === 'medium') return 'text-sm h-10';\n    if (size === 'small') return 'text-xs h-8';\n    return '';\n  }, [size]);\n  const iconColor = useMemo(() => {\n    if (disabled) return 'text-gray-40';\n    if (variant === 'contained') return 'text-white';\n    return 'text-primary hover:text-primary-dark';\n  }, [disabled, variant]);\n  const iconSize = useMemo(() => {\n    if (size === 'large') return 'w-5 h-5';\n    if (size === 'medium') return 'w-4 h-4';\n    if (size === 'small') return 'w-3 h-3';\n  }, [size]);\n  const startIconComp = startIcon ? /*#__PURE__*/React.cloneElement(startIcon, {\n    className: `mr-2 ${iconColor} ${iconSize} ${startIcon.props.className || ''}`\n  }) : null;\n  const endIconComp = endIcon ? /*#__PURE__*/React.cloneElement(endIcon, {\n    className: `ml-2 ${iconColor} ${iconSize} ${endIcon.props.className || ''}`\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: e => onClick && onClick(e),\n    disabled: disabled,\n    className: `\n      flex justify-center items-center focus:outline-none rounded ${disabledStyle} ${colorStyle} ${sizeStyle} ${fullWidth ? 'w-full' : 'px-4'} ${className}`,\n    ...props,\n    children: [startIconComp, children, endIconComp]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Button, \"G3RzHKQJusmHEejZV0dr8UxmwdU=\");\n\n_c = Button;\nButton.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.string,\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  danger: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  startIcon: PropTypes.node,\n  endIcon: PropTypes.node\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/components/Button/index.js"],"names":["React","useMemo","PropTypes","Button","onClick","className","children","size","color","variant","disabled","fullWidth","danger","startIcon","endIcon","props","disabledStyle","colorStyle","sizeStyle","iconColor","iconSize","startIconComp","cloneElement","endIconComp","e","propTypes","string","oneOf","bool","func","oneOfType","arrayOf","node","isRequired"],"mappings":"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","sourcesContent":["import React, {useMemo} from 'react'\nimport PropTypes from 'prop-types'\nfunction Button({\n  onClick,\n  className = '',\n  children,\n  size = 'medium',\n  color = 'primary',\n  variant = 'contained',\n  disabled = false,\n  fullWidth = false,\n  danger = false,\n  startIcon,\n  endIcon,\n  ...props\n}) {\n  const disabledStyle = useMemo(() => {\n    if (disabled) {\n      if (variant === 'text')\n        return 'bg-transparent text-gray-40 cursor-not-allowed'\n      else return 'bg-gray-20 text-gray-40 cursor-not-allowed'\n    }\n    return ''\n  }, [disabled, variant])\n\n  const colorStyle = useMemo(() => {\n    if (disabled) return ''\n    if (variant === 'text') {\n      if (danger) return 'text error bg-transparent hover:bg-error-10'\n      if (color === 'primary')\n        return 'text-gray-80 bg-transparent hover:bg-gray-10'\n    } else if (variant === 'outlined') {\n      if (danger)\n        return 'border border-error text-error bg-white hover:border-error-dark hover:text-error-dark'\n      if (color === 'primary')\n        return 'border border-primary text-primary bg-white hover:border-primary-dark hover:text-primary-dark'\n    } else if (variant === 'contained') {\n      if (danger) return 'text-white bg-error hover:bg-error-dark'\n      if (color === 'primary')\n        return 'text-white bg-primary hover:bg-primary-dark'\n    }\n    return ''\n  }, [disabled, variant, color, danger])\n\n  const sizeStyle = useMemo(() => {\n    if (size === 'large') return 'text-base h-12'\n    if (size === 'medium') return 'text-sm h-10'\n    if (size === 'small') return 'text-xs h-8'\n    return ''\n  }, [size])\n\n  const iconColor = useMemo(() => {\n    if (disabled) return 'text-gray-40'\n    if (variant === 'contained') return 'text-white'\n    return 'text-primary hover:text-primary-dark'\n  }, [disabled, variant])\n\n  const iconSize = useMemo(() => {\n    if (size === 'large') return 'w-5 h-5'\n    if (size === 'medium') return 'w-4 h-4'\n    if (size === 'small') return 'w-3 h-3'\n  }, [size])\n\n  const startIconComp = startIcon\n    ? React.cloneElement(startIcon, {\n        className: `mr-2 ${iconColor} ${iconSize} ${\n          startIcon.props.className || ''\n        }`,\n      })\n    : null\n\n  const endIconComp = endIcon\n    ? React.cloneElement(endIcon, {\n        className: `ml-2 ${iconColor} ${iconSize} ${\n          endIcon.props.className || ''\n        }`,\n      })\n    : null\n\n  return (\n    <button\n      onClick={e => onClick && onClick(e)}\n      disabled={disabled}\n      className={`\n      flex justify-center items-center focus:outline-none rounded ${disabledStyle} ${colorStyle} ${sizeStyle} ${\n        fullWidth ? 'w-full' : 'px-4'\n      } ${className}`}\n      {...props}\n    >\n      {startIconComp}\n      {children}\n      {endIconComp}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.string,\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  danger: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  startIcon: PropTypes.node,\n  endIcon: PropTypes.node,\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}