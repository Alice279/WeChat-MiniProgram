{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/constants/chainConfig.js\";\n// chain config constants\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { IS_DEV } from '../utils';\nimport { checkHexAddress, checkCfxTokenAddress } from '../utils/address';\nimport { ChainBscLogo, ChainBtcLogo, ChainEthLogo, ChainCfxLogo, ChainOecLogo, MetamaskLogo, PortalLogo } from '../assets/svg';\n/**\n * ethereum config\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const KeyOfEth = 'eth';\nexport const ScanUrlEth = IS_DEV ? 'https://rinkeby.etherscan.io' : 'https://etherscan.io';\nexport const ChainIdEth = {\n  MAINNET: 1,\n  TESTNET: 4 // shuttle use Rinkeby network as testnet\n  // ROPSTEN: 3,\n  // GÃ–RLI: 5,\n  // KOVAN: 42,\n\n};\n/**\n * bsc config\n */\n\nexport const KeyOfBsc = 'bsc';\nexport const ScanUrlBsc = IS_DEV ? 'https://testnet.bscscan.com' : 'https://bscscan.com';\nexport const ChainIdBsc = {\n  MAINNET: 56,\n  TESTNET: 97\n};\n/**\n * oec config\n */\n\nexport const KeyOfOec = 'oec';\nexport const ScanUrlOec = IS_DEV ? 'https://www.oklink.com/okexchain' : 'https://www.oklink.com/okexchain-test';\nexport const ChainIdOec = {\n  MAINNET: 66,\n  TESTNET: 65\n};\n/**\n * conflux config\n */\n\nexport const KeyOfCfx = 'cfx';\nexport const ScanUrlCfx = IS_DEV ? 'https://testnet.confluxscan.io' : 'https://confluxscan.io';\nexport const ChainIdCfx = {\n  MAINNET: 1029,\n  TESTNET: 1\n};\n/**\n * bitcoin config\n */\n\nexport const KeyOfBtc = 'btc';\nexport const ScanUrlBtc = IS_DEV ? 'https://blockstream.info/testnet' : 'https://blockstream.info';\nexport const KeyOfPortal = 'portal';\nexport const KeyOfMetaMask = 'metamask';\nexport const WalletConfig = {\n  [KeyOfPortal]: {\n    key: KeyOfPortal,\n    name: 'ConfluxPortal',\n    website: 'https://portal.confluxnetwork.org',\n\n    icon(className) {\n      return /*#__PURE__*/_jsxDEV(WalletIcon, {\n        className: className,\n        type: KeyOfPortal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n\n  },\n  [KeyOfMetaMask]: {\n    key: KeyOfMetaMask,\n    name: 'MetaMask',\n    website: 'https://metamask.io',\n\n    icon(className) {\n      return /*#__PURE__*/_jsxDEV(WalletIcon, {\n        className: className,\n        type: KeyOfMetaMask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 14\n      }, this);\n    }\n\n  }\n};\nexport const displayFilter = obj => {\n  return (obj === null || obj === void 0 ? void 0 : obj.supported) === 1 && (obj === null || obj === void 0 ? void 0 : obj.in_token_list) === 1;\n};\n/**\n * chain config\n */\n\nexport const ChainConfig = {\n  [KeyOfEth]: {\n    key: KeyOfEth,\n\n    icon(className) {\n      return /*#__PURE__*/_jsxDEV(ChainIcon, {\n        className: className,\n        chain: KeyOfEth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 14\n      }, this);\n    },\n\n    fullName: 'Ethereum',\n    //full name of the chain\n    shortName: 'Ethereum',\n    // short name of chain, usually used for fetching api\n    tokenName: 'ETH',\n    //the name of native token for this chain\n    checkAddress: checkHexAddress,\n    displayFilter,\n    scanUrl: ScanUrlEth,\n    scanTxUrl: ScanUrlEth + '/tx/',\n    scanTokenUrl: ScanUrlEth + '/token/',\n    // TODO\n    // commonTokens: ['ETH', 'USDT', 'eCFX'],\n    commonTokens: ['eth', '0xae080e58d91cf0b8a8de18ddcf92b9e5fbfadec5'],\n    supportedChainIds: ChainIdEth,\n    wallet: KeyOfMetaMask,\n    remainderAmount: 0.15 //when you shuttle in some tokens,for example: ETH-cETH,you must have reminder of this amount to pay fee\n\n  },\n  [KeyOfBsc]: {\n    key: KeyOfBsc,\n\n    icon(className) {\n      return /*#__PURE__*/_jsxDEV(ChainIcon, {\n        className: className,\n        chain: KeyOfBsc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 14\n      }, this);\n    },\n\n    fullName: 'Binance Smart Chain',\n    shortName: 'BSC',\n    tokenName: 'BNB',\n    checkAddress: checkHexAddress,\n    displayFilter,\n    scanUrl: ScanUrlBsc,\n    scanTxUrl: ScanUrlBsc + '/tx/',\n    scanTokenUrl: ScanUrlBsc + '/token/',\n    // TODO\n    commonTokens: ['BNB', 'bcUSDT', 'bCFX'],\n    supportedChainIds: ChainIdBsc,\n    wallet: KeyOfMetaMask,\n    remainderAmount: 0.002\n  },\n  [KeyOfOec]: {\n    key: KeyOfOec,\n\n    icon(className, size) {\n      return /*#__PURE__*/_jsxDEV(ChainIcon, {\n        className: className,\n        size: size,\n        chain: KeyOfOec\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 14\n      }, this);\n    },\n\n    fullName: 'OKExChain',\n    shortName: 'OEC',\n    tokenName: 'OKT',\n    checkAddress: checkHexAddress,\n    displayFilter,\n    scanUrl: ScanUrlOec,\n    scanTxUrl: ScanUrlOec + '/tx/',\n    scanTokenUrl: ScanUrlOec + '/tokenAddr/',\n    // TODO\n    commonTokens: ['OKT'],\n    supportedChainIds: ChainIdOec,\n    wallet: KeyOfMetaMask,\n    remainderAmount: 0.001\n  },\n  [KeyOfCfx]: {\n    key: KeyOfCfx,\n\n    icon(className) {\n      return /*#__PURE__*/_jsxDEV(ChainIcon, {\n        className: className,\n        chain: KeyOfCfx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 14\n      }, this);\n    },\n\n    fullName: 'Conflux',\n    shortName: 'Conflux',\n    tokenName: 'CFX',\n    checkAddress: checkCfxTokenAddress,\n    displayFilter,\n    scanUrl: ScanUrlCfx,\n    scanTxUrl: ScanUrlCfx + '/transaction/',\n    scanTokenUrl: ScanUrlCfx + '/address/',\n    // TODO\n    commonTokens: ['CFX', 'cUSDT', 'cETH'],\n    supportedChainIds: ChainIdCfx,\n    wallet: KeyOfPortal,\n    remainderAmount: 1\n  },\n  [KeyOfBtc]: {\n    key: KeyOfBtc,\n\n    icon(className) {\n      return /*#__PURE__*/_jsxDEV(ChainIcon, {\n        className: className,\n        chain: KeyOfBtc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 14\n      }, this);\n    },\n\n    fullName: 'Bitcoin',\n    shortName: 'Bitcoin',\n    tokenName: 'BTC',\n\n    checkAddress() {\n      //TODO:\n      return true;\n    },\n\n    displayFilter() {\n      return true;\n    },\n\n    scanUrl: ScanUrlBtc,\n    scanTxUrl: ScanUrlBtc + '/tx/',\n    commonTokens: [],\n    remainderAmount: 0\n  }\n};\nexport const SupportedChains = Object.keys(ChainConfig);\n_c = SupportedChains;\nexport const SupportedWallets = Object.keys(WalletConfig); // set default chain to FromChain and ToChain when shuttle\n\n_c2 = SupportedWallets;\nexport const DefaultFromChain = KeyOfEth;\nexport const DefaultToChain = KeyOfCfx;\nexport const SupportedChainIdsWeb3 = [...Object.values(ChainConfig[KeyOfEth].supportedChainIds), ...Object.values(ChainConfig[KeyOfBsc].supportedChainIds), ...Object.values(ChainConfig[KeyOfOec].supportedChainIds)];\nconst DefaultChainIconSize = 'w-10 h-10';\nexport function ChainIcon({\n  chain,\n  className = ''\n}) {\n  let icon;\n\n  switch (chain) {\n    case KeyOfEth:\n      icon = /*#__PURE__*/_jsxDEV(ChainEthLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case KeyOfBsc:\n      icon = /*#__PURE__*/_jsxDEV(ChainBscLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case KeyOfCfx:\n      icon = /*#__PURE__*/_jsxDEV(ChainCfxLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case KeyOfBtc:\n      icon = /*#__PURE__*/_jsxDEV(ChainBtcLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case KeyOfOec:\n      icon = /*#__PURE__*/_jsxDEV(ChainOecLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 14\n      }, this);\n      break;\n\n    default:\n      //TODO: maybe need to change a better default icon\n      icon = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      break;\n  }\n\n  return /*#__PURE__*/React.cloneElement(icon, {\n    className: `${DefaultChainIconSize} ${className}`\n  });\n}\n_c3 = ChainIcon;\nconst DefaultWalletIconSize = 'w-4 h-4';\nexport function WalletIcon({\n  type,\n  className = ''\n}) {\n  let icon;\n\n  switch (type) {\n    case KeyOfPortal:\n      icon = /*#__PURE__*/_jsxDEV(PortalLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 14\n      }, this);\n      break;\n\n    case KeyOfMetaMask:\n      icon = /*#__PURE__*/_jsxDEV(MetamaskLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 14\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/React.cloneElement(icon, {\n    className: `${DefaultWalletIconSize} ${className}`\n  });\n}\n_c4 = WalletIcon;\nChainIcon.propTypes = {\n  chain: PropTypes.oneOf(SupportedChains).isRequired,\n  className: PropTypes.string\n};\nWalletIcon.propTypes = {\n  type: PropTypes.oneOf(SupportedWallets).isRequired,\n  className: PropTypes.string\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SupportedChains\");\n$RefreshReg$(_c2, \"SupportedWallets\");\n$RefreshReg$(_c3, \"ChainIcon\");\n$RefreshReg$(_c4, \"WalletIcon\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/constants/chainConfig.js"],"names":["React","PropTypes","IS_DEV","checkHexAddress","checkCfxTokenAddress","ChainBscLogo","ChainBtcLogo","ChainEthLogo","ChainCfxLogo","ChainOecLogo","MetamaskLogo","PortalLogo","KeyOfEth","ScanUrlEth","ChainIdEth","MAINNET","TESTNET","KeyOfBsc","ScanUrlBsc","ChainIdBsc","KeyOfOec","ScanUrlOec","ChainIdOec","KeyOfCfx","ScanUrlCfx","ChainIdCfx","KeyOfBtc","ScanUrlBtc","KeyOfPortal","KeyOfMetaMask","WalletConfig","key","name","website","icon","className","displayFilter","obj","supported","in_token_list","ChainConfig","fullName","shortName","tokenName","checkAddress","scanUrl","scanTxUrl","scanTokenUrl","commonTokens","supportedChainIds","wallet","remainderAmount","size","SupportedChains","Object","keys","SupportedWallets","DefaultFromChain","DefaultToChain","SupportedChainIdsWeb3","values","DefaultChainIconSize","ChainIcon","chain","cloneElement","DefaultWalletIconSize","WalletIcon","type","propTypes","oneOf","isRequired","string"],"mappings":"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","sourcesContent":["// chain config constants\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {IS_DEV} from '../utils'\nimport {checkHexAddress, checkCfxTokenAddress} from '../utils/address'\nimport {\n  ChainBscLogo,\n  ChainBtcLogo,\n  ChainEthLogo,\n  ChainCfxLogo,\n  ChainOecLogo,\n  MetamaskLogo,\n  PortalLogo,\n} from '../assets/svg'\n\n/**\n * ethereum config\n */\nexport const KeyOfEth = 'eth'\nexport const ScanUrlEth = IS_DEV\n  ? 'https://rinkeby.etherscan.io'\n  : 'https://etherscan.io'\nexport const ChainIdEth = {\n  MAINNET: 1,\n  TESTNET: 4, // shuttle use Rinkeby network as testnet\n  // ROPSTEN: 3,\n  // GÃ–RLI: 5,\n  // KOVAN: 42,\n}\n\n/**\n * bsc config\n */\nexport const KeyOfBsc = 'bsc'\nexport const ScanUrlBsc = IS_DEV\n  ? 'https://testnet.bscscan.com'\n  : 'https://bscscan.com'\nexport const ChainIdBsc = {\n  MAINNET: 56,\n  TESTNET: 97,\n}\n\n/**\n * oec config\n */\n\nexport const KeyOfOec = 'oec'\nexport const ScanUrlOec = IS_DEV\n  ? 'https://www.oklink.com/okexchain'\n  : 'https://www.oklink.com/okexchain-test'\nexport const ChainIdOec = {\n  MAINNET: 66,\n  TESTNET: 65,\n}\n\n/**\n * conflux config\n */\nexport const KeyOfCfx = 'cfx'\nexport const ScanUrlCfx = IS_DEV\n  ? 'https://testnet.confluxscan.io'\n  : 'https://confluxscan.io'\nexport const ChainIdCfx = {\n  MAINNET: 1029,\n  TESTNET: 1,\n}\n\n/**\n * bitcoin config\n */\nexport const KeyOfBtc = 'btc'\nexport const ScanUrlBtc = IS_DEV\n  ? 'https://blockstream.info/testnet'\n  : 'https://blockstream.info'\n\nexport const KeyOfPortal = 'portal'\nexport const KeyOfMetaMask = 'metamask'\nexport const WalletConfig = {\n  [KeyOfPortal]: {\n    key: KeyOfPortal,\n    name: 'ConfluxPortal',\n    website: 'https://portal.confluxnetwork.org',\n    icon(className) {\n      return <WalletIcon className={className} type={KeyOfPortal} />\n    },\n  },\n  [KeyOfMetaMask]: {\n    key: KeyOfMetaMask,\n    name: 'MetaMask',\n    website: 'https://metamask.io',\n    icon(className) {\n      return <WalletIcon className={className} type={KeyOfMetaMask} />\n    },\n  },\n}\n\nexport const displayFilter = obj => {\n  return obj?.supported === 1 && obj?.in_token_list === 1\n}\n\n/**\n * chain config\n */\nexport const ChainConfig = {\n  [KeyOfEth]: {\n    key: KeyOfEth,\n    icon(className) {\n      return <ChainIcon className={className} chain={KeyOfEth} />\n    },\n    fullName: 'Ethereum', //full name of the chain\n    shortName: 'Ethereum', // short name of chain, usually used for fetching api\n    tokenName: 'ETH', //the name of native token for this chain\n    checkAddress: checkHexAddress,\n    displayFilter,\n    scanUrl: ScanUrlEth,\n    scanTxUrl: ScanUrlEth + '/tx/',\n    scanTokenUrl: ScanUrlEth + '/token/',\n    // TODO\n    // commonTokens: ['ETH', 'USDT', 'eCFX'],\n    commonTokens: ['eth', '0xae080e58d91cf0b8a8de18ddcf92b9e5fbfadec5'],\n    supportedChainIds: ChainIdEth,\n    wallet: KeyOfMetaMask,\n    remainderAmount: 0.15, //when you shuttle in some tokens,for example: ETH-cETH,you must have reminder of this amount to pay fee\n  },\n  [KeyOfBsc]: {\n    key: KeyOfBsc,\n    icon(className) {\n      return <ChainIcon className={className} chain={KeyOfBsc} />\n    },\n    fullName: 'Binance Smart Chain',\n    shortName: 'BSC',\n    tokenName: 'BNB',\n    checkAddress: checkHexAddress,\n    displayFilter,\n    scanUrl: ScanUrlBsc,\n    scanTxUrl: ScanUrlBsc + '/tx/',\n    scanTokenUrl: ScanUrlBsc + '/token/',\n    // TODO\n    commonTokens: ['BNB', 'bcUSDT', 'bCFX'],\n    supportedChainIds: ChainIdBsc,\n    wallet: KeyOfMetaMask,\n    remainderAmount: 0.002,\n  },\n  [KeyOfOec]: {\n    key: KeyOfOec,\n    icon(className, size) {\n      return <ChainIcon className={className} size={size} chain={KeyOfOec} />\n    },\n    fullName: 'OKExChain',\n    shortName: 'OEC',\n    tokenName: 'OKT',\n    checkAddress: checkHexAddress,\n    displayFilter,\n    scanUrl: ScanUrlOec,\n    scanTxUrl: ScanUrlOec + '/tx/',\n    scanTokenUrl: ScanUrlOec + '/tokenAddr/',\n    // TODO\n    commonTokens: ['OKT'],\n    supportedChainIds: ChainIdOec,\n    wallet: KeyOfMetaMask,\n    remainderAmount: 0.001,\n  },\n  [KeyOfCfx]: {\n    key: KeyOfCfx,\n    icon(className) {\n      return <ChainIcon className={className} chain={KeyOfCfx} />\n    },\n    fullName: 'Conflux',\n    shortName: 'Conflux',\n    tokenName: 'CFX',\n    checkAddress: checkCfxTokenAddress,\n    displayFilter,\n    scanUrl: ScanUrlCfx,\n    scanTxUrl: ScanUrlCfx + '/transaction/',\n    scanTokenUrl: ScanUrlCfx + '/address/',\n    // TODO\n    commonTokens: ['CFX', 'cUSDT', 'cETH'],\n    supportedChainIds: ChainIdCfx,\n    wallet: KeyOfPortal,\n    remainderAmount: 1,\n  },\n  [KeyOfBtc]: {\n    key: KeyOfBtc,\n    icon(className) {\n      return <ChainIcon className={className} chain={KeyOfBtc} />\n    },\n    fullName: 'Bitcoin',\n    shortName: 'Bitcoin',\n    tokenName: 'BTC',\n    checkAddress() {\n      //TODO:\n      return true\n    },\n    displayFilter() {\n      return true\n    },\n    scanUrl: ScanUrlBtc,\n    scanTxUrl: ScanUrlBtc + '/tx/',\n    commonTokens: [],\n    remainderAmount: 0,\n  },\n}\n\nexport const SupportedChains = Object.keys(ChainConfig)\n\nexport const SupportedWallets = Object.keys(WalletConfig)\n\n// set default chain to FromChain and ToChain when shuttle\nexport const DefaultFromChain = KeyOfEth\nexport const DefaultToChain = KeyOfCfx\nexport const SupportedChainIdsWeb3 = [\n  ...Object.values(ChainConfig[KeyOfEth].supportedChainIds),\n  ...Object.values(ChainConfig[KeyOfBsc].supportedChainIds),\n  ...Object.values(ChainConfig[KeyOfOec].supportedChainIds),\n]\n\nconst DefaultChainIconSize = 'w-10 h-10'\nexport function ChainIcon({chain, className = ''}) {\n  let icon\n  switch (chain) {\n    case KeyOfEth:\n      icon = <ChainEthLogo />\n      break\n    case KeyOfBsc:\n      icon = <ChainBscLogo />\n      break\n    case KeyOfCfx:\n      icon = <ChainCfxLogo />\n      break\n    case KeyOfBtc:\n      icon = <ChainBtcLogo />\n      break\n    case KeyOfOec:\n      icon = <ChainOecLogo />\n      break\n    default:\n      //TODO: maybe need to change a better default icon\n      icon = <></>\n      break\n  }\n  return React.cloneElement(icon, {\n    className: `${DefaultChainIconSize} ${className}`,\n  })\n}\n\nconst DefaultWalletIconSize = 'w-4 h-4'\nexport function WalletIcon({type, className = ''}) {\n  let icon\n  switch (type) {\n    case KeyOfPortal:\n      icon = <PortalLogo />\n      break\n    case KeyOfMetaMask:\n      icon = <MetamaskLogo />\n      break\n  }\n  return React.cloneElement(icon, {\n    className: `${DefaultWalletIconSize} ${className}`,\n  })\n}\n\nChainIcon.propTypes = {\n  chain: PropTypes.oneOf(SupportedChains).isRequired,\n  className: PropTypes.string,\n}\n\nWalletIcon.propTypes = {\n  type: PropTypes.oneOf(SupportedWallets).isRequired,\n  className: PropTypes.string,\n}\n"]},"metadata":{},"sourceType":"module"}