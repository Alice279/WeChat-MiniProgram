{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/pages/Shuttle/ConfirmModal/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Modal } from '../../../components';\nimport { SupportedChains } from '../../../constants/chainConfig';\nimport { useIsBtcChain } from '../../../hooks';\nimport SelectedChains from './SelectedChains';\nimport ConfirmInfo from './ConfirmInfo';\nimport ConfirmTips from './ConfirmTips';\nimport BtcConfirmTips from './BtcConfirmTips';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConfirmModal({\n  open = false,\n  fromChain,\n  toChain,\n  fromToken,\n  value,\n  onClose,\n  ...props\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const fromIsBtcChain = useIsBtcChain(fromChain);\n  const {\n    display_symbol\n  } = fromToken;\n\n  const content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-gray-100 text-xl\",\n      children: [value, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm ml-1\",\n        children: display_symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"inline-block -mt-1 mb-4 text-gray-40\",\n      children: t('transactionAmount')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(SelectedChains, {\n        fromChain: fromChain,\n        toChain: toChain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmInfo, {\n        fromChain: fromChain,\n        toChain: toChain,\n        fromToken: fromToken,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), fromIsBtcChain && /*#__PURE__*/_jsxDEV(BtcConfirmTips, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }, this), !fromIsBtcChain && /*#__PURE__*/_jsxDEV(ConfirmTips, {\n      fromChain: fromChain,\n      toChain: toChain,\n      fromToken: fromToken,\n      value: value,\n      onClose: onClose,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"medium\",\n    open: open,\n    content: content,\n    onClose: onClose,\n    className: \"!pb-0 !px-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmModal, \"dIrvtfFTzDAtg7Y6V1OYCRWQkKk=\", false, function () {\n  return [useTranslation, useIsBtcChain];\n});\n\n_c = ConfirmModal;\nConfirmModal.propTypes = {\n  open: PropTypes.bool,\n  fromToken: PropTypes.object.isRequired,\n  value: PropTypes.string.isRequired,\n  fromChain: PropTypes.oneOf(SupportedChains).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains).isRequired,\n  onClose: PropTypes.func\n};\nexport default ConfirmModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmModal\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/pages/Shuttle/ConfirmModal/index.js"],"names":["PropTypes","useTranslation","Modal","SupportedChains","useIsBtcChain","SelectedChains","ConfirmInfo","ConfirmTips","BtcConfirmTips","ConfirmModal","open","fromChain","toChain","fromToken","value","onClose","props","t","fromIsBtcChain","display_symbol","content","propTypes","bool","object","isRequired","string","oneOf","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport {useTranslation} from 'react-i18next'\nimport {Modal} from '../../../components'\nimport {SupportedChains} from '../../../constants/chainConfig'\nimport {useIsBtcChain} from '../../../hooks'\n\nimport SelectedChains from './SelectedChains'\nimport ConfirmInfo from './ConfirmInfo'\nimport ConfirmTips from './ConfirmTips'\nimport BtcConfirmTips from './BtcConfirmTips'\n\nfunction ConfirmModal({\n  open = false,\n  fromChain,\n  toChain,\n  fromToken,\n  value,\n  onClose,\n  ...props\n}) {\n  const {t} = useTranslation()\n  const fromIsBtcChain = useIsBtcChain(fromChain)\n  const {display_symbol} = fromToken\n  const content = (\n    <div className=\"flex flex-col items-center\">\n      <span className=\"text-gray-100 text-xl\">\n        {value}\n        <span className=\"text-sm ml-1\">{display_symbol}</span>\n      </span>\n      <span className=\"inline-block -mt-1 mb-4 text-gray-40\">\n        {t('transactionAmount')}\n      </span>\n      <div className=\"px-6 w-full\">\n        <SelectedChains fromChain={fromChain} toChain={toChain} />\n        <ConfirmInfo\n          fromChain={fromChain}\n          toChain={toChain}\n          fromToken={fromToken}\n          {...props}\n        />\n      </div>\n      {fromIsBtcChain && <BtcConfirmTips />}\n      {!fromIsBtcChain && (\n        <ConfirmTips\n          fromChain={fromChain}\n          toChain={toChain}\n          fromToken={fromToken}\n          value={value}\n          onClose={onClose}\n          {...props}\n        />\n      )}\n    </div>\n  )\n  return (\n    <Modal\n      size=\"medium\"\n      open={open}\n      content={content}\n      onClose={onClose}\n      className=\"!pb-0 !px-0\"\n    />\n  )\n}\n\nConfirmModal.propTypes = {\n  open: PropTypes.bool,\n  fromToken: PropTypes.object.isRequired,\n  value: PropTypes.string.isRequired,\n  fromChain: PropTypes.oneOf(SupportedChains).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains).isRequired,\n  onClose: PropTypes.func,\n}\n\nexport default ConfirmModal\n"]},"metadata":{},"sourceType":"module"}