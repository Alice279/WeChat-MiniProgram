{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/pages/Shuttle/ShuttleForm/TokenSelect.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { BgArrowRight } from '../../../assets/svg';\nimport { WrapIcon } from '../../../components';\nimport { TokenIcon } from '../../components';\nimport { SupportedChains } from '../../../constants/chainConfig';\nimport { useIsBtcChain } from '../../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TokenSelect({\n  token,\n  onClick,\n  type,\n  fromChain,\n  toChain,\n  ...props\n}) {\n  _s();\n\n  const isFromBtcChain = useIsBtcChain(fromChain);\n  const isToBtcChain = useIsBtcChain(toChain);\n  const chain = type === 'from' ? fromChain : toChain;\n  const {\n    display_symbol\n  } = token;\n  const style = useMemo(() => {\n    if (type === 'from') return 'text-gray-100';\n    if (type === 'to') return 'text-gray-40';\n  }, [type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex items-center ${type === 'from' ? 'cursor-pointer' : ''}`,\n    onClick: e => onClick && onClick(e),\n    \"aria-hidden\": \"true\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(TokenIcon, {\n      token: token,\n      chain: chain,\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `ml-1 ${style}`,\n      children: display_symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), type === 'from' && !isFromBtcChain && !isToBtcChain && /*#__PURE__*/_jsxDEV(WrapIcon, {\n      type: \"circle\",\n      className: \"ml-1\",\n      children: /*#__PURE__*/_jsxDEV(BgArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TokenSelect, \"VPqpS6zcqTv+TkVgfAjzah69hmg=\", false, function () {\n  return [useIsBtcChain, useIsBtcChain];\n});\n\n_c = TokenSelect;\nTokenSelect.propTypes = {\n  token: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf(['from', 'to']).isRequired,\n  fromChain: PropTypes.oneOf(SupportedChains).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains).isRequired\n};\nexport default TokenSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenSelect\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/pages/Shuttle/ShuttleForm/TokenSelect.js"],"names":["useMemo","PropTypes","BgArrowRight","WrapIcon","TokenIcon","SupportedChains","useIsBtcChain","TokenSelect","token","onClick","type","fromChain","toChain","props","isFromBtcChain","isToBtcChain","chain","display_symbol","style","e","propTypes","object","isRequired","func","oneOf"],"mappings":";;;AAAA,SAAQA,OAAR,QAAsB,OAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,aAAR,QAA4B,gBAA5B;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA,OAAlC;AAA2C,KAAGC;AAA9C,CAArB,EAA2E;AAAA;;AACzE,QAAMC,cAAc,GAAGR,aAAa,CAACK,SAAD,CAApC;AACA,QAAMI,YAAY,GAAGT,aAAa,CAACM,OAAD,CAAlC;AACA,QAAMI,KAAK,GAAGN,IAAI,KAAK,MAAT,GAAkBC,SAAlB,GAA8BC,OAA5C;AACA,QAAM;AAACK,IAAAA;AAAD,MAAmBT,KAAzB;AACA,QAAMU,KAAK,GAAGlB,OAAO,CAAC,MAAM;AAC1B,QAAIU,IAAI,KAAK,MAAb,EAAqB,OAAO,eAAP;AACrB,QAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,cAAP;AACpB,GAHoB,EAGlB,CAACA,IAAD,CAHkB,CAArB;AAKA,sBACE;AACE,IAAA,SAAS,EAAG,qBAAoBA,IAAI,KAAK,MAAT,GAAkB,gBAAlB,GAAqC,EAAG,EAD1E;AAEE,IAAA,OAAO,EAAES,CAAC,IAAIV,OAAO,IAAIA,OAAO,CAACU,CAAD,CAFlC;AAGE,mBAAY,MAHd;AAAA,OAIMN,KAJN;AAAA,4BAME,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEL,KAAlB;AAAyB,MAAA,KAAK,EAAEQ,KAAhC;AAAuC,MAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAM,MAAA,SAAS,EAAG,QAAOE,KAAM,EAA/B;AAAA,gBAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,YAPF,EAQGP,IAAI,KAAK,MAAT,IAAmB,CAACI,cAApB,IAAsC,CAACC,YAAvC,iBACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAwB,MAAA,SAAS,EAAC,MAAlC;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA1BQR,W;UACgBD,a,EACFA,a;;;KAFdC,W;AA4BTA,WAAW,CAACa,SAAZ,GAAwB;AACtBZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UADF;AAEtBb,EAAAA,OAAO,EAAER,SAAS,CAACsB,IAFG;AAGtBb,EAAAA,IAAI,EAAET,SAAS,CAACuB,KAAV,CAAgB,CAAC,MAAD,EAAS,IAAT,CAAhB,EAAgCF,UAHhB;AAItBX,EAAAA,SAAS,EAAEV,SAAS,CAACuB,KAAV,CAAgBnB,eAAhB,EAAiCiB,UAJtB;AAKtBV,EAAAA,OAAO,EAAEX,SAAS,CAACuB,KAAV,CAAgBnB,eAAhB,EAAiCiB;AALpB,CAAxB;AAQA,eAAef,WAAf","sourcesContent":["import {useMemo} from 'react'\nimport PropTypes from 'prop-types'\nimport {BgArrowRight} from '../../../assets/svg'\nimport {WrapIcon} from '../../../components'\nimport {TokenIcon} from '../../components'\nimport {SupportedChains} from '../../../constants/chainConfig'\nimport {useIsBtcChain} from '../../../hooks'\n\nfunction TokenSelect({token, onClick, type, fromChain, toChain, ...props}) {\n  const isFromBtcChain = useIsBtcChain(fromChain)\n  const isToBtcChain = useIsBtcChain(toChain)\n  const chain = type === 'from' ? fromChain : toChain\n  const {display_symbol} = token\n  const style = useMemo(() => {\n    if (type === 'from') return 'text-gray-100'\n    if (type === 'to') return 'text-gray-40'\n  }, [type])\n\n  return (\n    <div\n      className={`flex items-center ${type === 'from' ? 'cursor-pointer' : ''}`}\n      onClick={e => onClick && onClick(e)}\n      aria-hidden=\"true\"\n      {...props}\n    >\n      <TokenIcon token={token} chain={chain} size=\"small\" />\n      <span className={`ml-1 ${style}`}>{display_symbol}</span>\n      {type === 'from' && !isFromBtcChain && !isToBtcChain && (\n        <WrapIcon type=\"circle\" className=\"ml-1\">\n          <BgArrowRight />\n        </WrapIcon>\n      )}\n    </div>\n  )\n}\n\nTokenSelect.propTypes = {\n  token: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n  type: PropTypes.oneOf(['from', 'to']).isRequired,\n  fromChain: PropTypes.oneOf(SupportedChains).isRequired,\n  toChain: PropTypes.oneOf(SupportedChains).isRequired,\n}\n\nexport default TokenSelect\n"]},"metadata":{},"sourceType":"module"}