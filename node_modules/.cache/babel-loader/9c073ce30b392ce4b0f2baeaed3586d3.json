{"ast":null,"code":"var _jsxFileName = \"/Users/alice/Documents/rigel/src/components/Modal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClickAway } from 'react-use';\nimport { Close } from '../../assets/svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal({\n  className = '',\n  width,\n  open = false,\n  closable = true,\n  closeIcon,\n  icon,\n  onClose,\n  title,\n  content,\n  actions,\n  size = 'small',\n  ...props\n}) {\n  _s();\n\n  const ref = useRef(null);\n\n  const onCloseClick = e => {\n    e.stopPropagation();\n\n    if (closable) {\n      onClose && onClose(e);\n    }\n  };\n\n  useClickAway(ref, e => {\n    onClose && onClose(e);\n  });\n  const iconComp = icon ? /*#__PURE__*/React.cloneElement(icon, {\n    className: `w-12 h-12 mb-3 ${icon.props.className || ''}`\n  }) : null;\n  const closeIconComp = closeIcon ? /*#__PURE__*/React.cloneElement(closeIcon, {\n    className: `${size === 'medium' ? 'w-6 h-6' : 'w-4 h-4'} text-gray-40 ${closeIcon.props.className || ''}`\n  }) : null;\n  if (!open) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"fixed w-full h-full top-0 left-0 px-3 md:px-0 bg-black bg-opacity-60 transation flex justify-center items-center z-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `relative overflow-auto flex flex-col items-center z-20 ${width ? width : size === 'medium' ? 'w-full md:w-110' : 'w-full md:w-70'} rounded bg-gray-0 shadow-3 p-6 ${className}`,\n      ...props,\n      children: [closable && /*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": \"true\",\n        onClick: e => onCloseClick(e),\n        className: \"absolute top-3 right-3\",\n        children: closeIcon ? closeIconComp : /*#__PURE__*/_jsxDEV(Close, {\n          className: `${size === 'medium' ? 'w-6 h-6' : 'w-4 h-4'} text-gray-40`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), iconComp, title && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-base text-gray-100 mb-2 font-medium\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-60 w-full\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), actions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center w-full mt-4\",\n        children: actions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Modal, \"jl0+F6DnX7d4HwUg2HffZLEIp0A=\", false, function () {\n  return [useClickAway];\n});\n\n_c = Modal;\nexport default Modal;\nModal.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium']),\n  width: PropTypes.string,\n  title: PropTypes.string,\n  open: PropTypes.bool,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n  actions: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  content: PropTypes.node.isRequired,\n  icon: PropTypes.node,\n  closeIcon: PropTypes.node\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/alice/Documents/rigel/src/components/Modal/index.js"],"names":["React","useRef","PropTypes","useClickAway","Close","Modal","className","width","open","closable","closeIcon","icon","onClose","title","content","actions","size","props","ref","onCloseClick","e","stopPropagation","iconComp","cloneElement","closeIconComp","propTypes","string","oneOf","bool","func","oneOfType","arrayOf","node","isRequired"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react'\nimport PropTypes from 'prop-types'\nimport {useClickAway} from 'react-use'\nimport {Close} from '../../assets/svg'\n\nfunction Modal({\n  className = '',\n  width,\n  open = false,\n  closable = true,\n  closeIcon,\n  icon,\n  onClose,\n  title,\n  content,\n  actions,\n  size = 'small',\n  ...props\n}) {\n  const ref = useRef(null)\n\n  const onCloseClick = e => {\n    e.stopPropagation()\n    if (closable) {\n      onClose && onClose(e)\n    }\n  }\n\n  useClickAway(ref, e => {\n    onClose && onClose(e)\n  })\n\n  const iconComp = icon\n    ? React.cloneElement(icon, {\n        className: `w-12 h-12 mb-3 ${icon.props.className || ''}`,\n      })\n    : null\n\n  const closeIconComp = closeIcon\n    ? React.cloneElement(closeIcon, {\n        className: `${size === 'medium' ? 'w-6 h-6' : 'w-4 h-4'} text-gray-40 ${\n          closeIcon.props.className || ''\n        }`,\n      })\n    : null\n\n  if (!open) return null\n  return (\n    <div\n      ref={ref}\n      className=\"fixed w-full h-full top-0 left-0 px-3 md:px-0 bg-black bg-opacity-60 transation flex justify-center items-center z-10\"\n    >\n      <div\n        className={`relative overflow-auto flex flex-col items-center z-20 ${\n          width\n            ? width\n            : size === 'medium'\n            ? 'w-full md:w-110'\n            : 'w-full md:w-70'\n        } rounded bg-gray-0 shadow-3 p-6 ${className}`}\n        {...props}\n      >\n        {closable && (\n          <span\n            aria-hidden=\"true\"\n            onClick={e => onCloseClick(e)}\n            className=\"absolute top-3 right-3\"\n          >\n            {closeIcon ? (\n              closeIconComp\n            ) : (\n              <Close\n                className={`${\n                  size === 'medium' ? 'w-6 h-6' : 'w-4 h-4'\n                } text-gray-40`}\n              />\n            )}\n          </span>\n        )}\n        {iconComp}\n        {title && (\n          <div className=\"text-base text-gray-100 mb-2 font-medium\">\n            {title}\n          </div>\n        )}\n        <div className=\"text-gray-60 w-full\">{content}</div>\n        {actions && (\n          <div className=\"flex items-center w-full mt-4\">{actions}</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n\nModal.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium']),\n  width: PropTypes.string,\n  title: PropTypes.string,\n  open: PropTypes.bool,\n  closable: PropTypes.bool,\n  onClose: PropTypes.func,\n  actions: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  content: PropTypes.node.isRequired,\n  icon: PropTypes.node,\n  closeIcon: PropTypes.node,\n}\n"]},"metadata":{},"sourceType":"module"}